{"version":3,"file":"index.es268.js","sources":["../../node_modules/@apollo/client/link/http/createHttpLink.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable, hasDirectives } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport { handleError, readMultipartBody, parseAndCheckHttpResponse, } from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport { selectHttpOptionsAndBodyInternal, defaultPrinter, fallbackHttpConfig, } from \"./selectHttpOptionsAndBody.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError, filterOperationVariables } from \"../utils/index.js\";\nimport { maybe, getMainDefinition, removeClientSetsFromDocument, } from \"../../utilities/index.js\";\nvar backupFetch = maybe(function () { return fetch; });\nexport var createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? \"/graphql\" : _a, \n    // use default global fetch if nothing passed in\n    preferredFetch = linkOptions.fetch, _b = linkOptions.print, print = _b === void 0 ? defaultPrinter : _b, includeExtensions = linkOptions.includeExtensions, preserveHeaderCase = linkOptions.preserveHeaderCase, useGETForQueries = linkOptions.useGETForQueries, _c = linkOptions.includeUnusedVariables, includeUnusedVariables = _c === void 0 ? false : _c, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"print\", \"includeExtensions\", \"preserveHeaderCase\", \"useGETForQueries\", \"includeUnusedVariables\"]);\n    if (globalThis.__DEV__ !== false) {\n        // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n        // defined, so requests won't fail at runtime.\n        checkFetcher(preferredFetch || backupFetch);\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions, preserveHeaderCase: preserveHeaderCase },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        // `apollographql-client-*` headers are automatically set if a\n        // `clientAwareness` object is found in the context. These headers are\n        // set first, followed by the rest of the headers pulled from\n        // `context.headers`. If desired, `apollographql-client-*` headers set by\n        // the `clientAwareness` object can be overridden by\n        // `apollographql-client-*` headers set in `context.headers`.\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders[\"apollographql-client-name\"] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders[\"apollographql-client-version\"] = version;\n            }\n        }\n        var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        if (hasDirectives([\"client\"], operation.query)) {\n            var transformedQuery = removeClientSetsFromDocument(operation.query);\n            if (!transformedQuery) {\n                return fromError(new Error(\"HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`.\"));\n            }\n            operation.query = transformedQuery;\n        }\n        //uses fallback, link, and then context to build options\n        var _b = selectHttpOptionsAndBodyInternal(operation, print, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        if (body.variables && !includeUnusedVariables) {\n            body.variables = filterOperationVariables(body.variables, operation.query);\n        }\n        var controller;\n        if (!options.signal && typeof AbortController !== \"undefined\") {\n            controller = new AbortController();\n            options.signal = controller.signal;\n        }\n        // If requested, set method to GET if there are no mutations.\n        var definitionIsMutation = function (d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"mutation\";\n        };\n        var definitionIsSubscription = function (d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"subscription\";\n        };\n        var isSubscription = definitionIsSubscription(getMainDefinition(operation.query));\n        // does not match custom directives beginning with @defer\n        var hasDefer = hasDirectives([\"defer\"], operation.query);\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = \"GET\";\n        }\n        if (hasDefer || isSubscription) {\n            options.headers = options.headers || {};\n            var acceptHeader = \"multipart/mixed;\";\n            // Omit defer-specific headers if the user attempts to defer a selection\n            // set on a subscription and log a warning.\n            if (isSubscription && hasDefer) {\n                globalThis.__DEV__ !== false && invariant.warn(38);\n            }\n            if (isSubscription) {\n                acceptHeader +=\n                    \"boundary=graphql;subscriptionSpec=1.0,application/json\";\n            }\n            else if (hasDefer) {\n                acceptHeader += \"deferSpec=20220824,application/json\";\n            }\n            options.headers.accept = acceptHeader;\n        }\n        if (options.method === \"GET\") {\n            var _c = rewriteURIForGET(chosenURI, body), newURI = _c.newURI, parseError = _c.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, \"Payload\");\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n            // fall back to the *current* global window.fetch function (see issue\n            // #7832), or (if all else fails) the backupFetch function we saved when\n            // this module was first evaluated. This last option protects against the\n            // removal of window.fetch, which is unlikely but not impossible.\n            var currentFetch = preferredFetch || maybe(function () { return fetch; }) || backupFetch;\n            var observerNext = observer.next.bind(observer);\n            currentFetch(chosenURI, options)\n                .then(function (response) {\n                var _a;\n                operation.setContext({ response: response });\n                var ctype = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n                if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n                    return readMultipartBody(response, observerNext);\n                }\n                else {\n                    return parseAndCheckHttpResponse(operation)(response).then(observerNext);\n                }\n            })\n                .then(function () {\n                controller = undefined;\n                observer.complete();\n            })\n                .catch(function (err) {\n                controller = undefined;\n                handleError(err, observer);\n            });\n            return function () {\n                // XXX support canceling this request\n                // https://developers.google.com/web/updates/2017/09/abortable-fetch\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\n//# sourceMappingURL=createHttpLink.js.map"],"names":["backupFetch","maybe","createHttpLink","linkOptions","_a","uri","preferredFetch","_b","print","defaultPrinter","includeExtensions","preserveHeaderCase","useGETForQueries","_c","includeUnusedVariables","requestOptions","__rest","checkFetcher","linkConfig","ApolloLink","operation","chosenURI","selectURI","context","clientAwarenessHeaders","name_1","version","contextHeaders","__assign","contextConfig","hasDirectives","transformedQuery","removeClientSetsFromDocument","fromError","selectHttpOptionsAndBodyInternal","fallbackHttpConfig","options","body","filterOperationVariables","controller","definitionIsMutation","d","definitionIsSubscription","isSubscription","getMainDefinition","hasDefer","acceptHeader","invariant","rewriteURIForGET","newURI","parseError","serializeFetchParameter","Observable","observer","currentFetch","observerNext","response","ctype","readMultipartBody","parseAndCheckHttpResponse","err","handleError"],"mappings":"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","x_google_ignoreList":[0]}