{"version":3,"file":"index.cjs204.js","sources":["../node_modules/jwa/index.js"],"sourcesContent":["var bufferEqual = require('buffer-equal-constant-time');\nvar Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n"],"names":["bufferEqual","require$$0","Buffer","require$$1","crypto","require$$2","formatEcdsa","require$$3","util","require$$4","MSG_INVALID_ALGORITHM","MSG_INVALID_SECRET","MSG_INVALID_VERIFIER_KEY","MSG_INVALID_SIGNER_KEY","supportsKeyObjects","checkIsPublicKey","key","typeError","checkIsPrivateKey","checkIsSecretKey","fromBase64","base64","toBase64","base64url","padding","i","template","args","errMsg","bufferOrString","obj","normalizeInput","thing","createHmacSigner","bits","secret","hmac","sig","createHmacVerifier","signature","computedSig","createKeySigner","privateKey","signer","createKeyVerifier","publicKey","verifier","createPSSKeySigner","createPSSKeyVerifier","createECDSASigner","inner","createECDSAVerifer","result","createNoneSigner","createNoneVerifier","jwa","algorithm","signerFactories","verifierFactories","match","algo"],"mappings":"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","x_google_ignoreList":[0]}