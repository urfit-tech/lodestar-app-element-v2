{"version":3,"file":"index.es21.js","sources":["../node_modules/axios/lib/axios.js"],"sourcesContent":["'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n"],"names":["createInstance","defaultConfig","context","Axios","instance","bind","utils","instanceConfig","mergeConfig","axios","defaults","CanceledError","CancelToken","isCancel","VERSION","toFormData","AxiosError","promises","spread","isAxiosError","AxiosHeaders","thing","formDataToJSON","adapters","HttpStatusCode"],"mappings":";;;;;;;;;;;;;;;;;AA2BA,SAASA,EAAeC,GAAe;AACrC,QAAMC,IAAU,IAAIC,EAAMF,CAAa,GACjCG,IAAWC,EAAKF,EAAM,UAAU,SAASD,CAAO;AAGtD,SAAAI,EAAM,OAAOF,GAAUD,EAAM,WAAWD,GAAS,EAAC,YAAY,GAAI,CAAC,GAGnEI,EAAM,OAAOF,GAAUF,GAAS,MAAM,EAAC,YAAY,GAAI,CAAC,GAGxDE,EAAS,SAAS,SAAgBG,GAAgB;AAChD,WAAOP,EAAeQ,EAAYP,GAAeM,CAAc,CAAC;AAAA,EACjE,GAEMH;AACT;AAGK,MAACK,IAAQT,EAAeU,CAAQ;AAGrCD,EAAM,QAAQN;AAGdM,EAAM,gBAAgBE;AACtBF,EAAM,cAAcG;AACpBH,EAAM,WAAWI;AACjBJ,EAAM,UAAUK;AAChBL,EAAM,aAAaM;AAGnBN,EAAM,aAAaO;AAGnBP,EAAM,SAASA,EAAM;AAGrBA,EAAM,MAAM,SAAaQ,GAAU;AACjC,SAAO,QAAQ,IAAIA,CAAQ;AAC7B;AAEAR,EAAM,SAASS;AAGfT,EAAM,eAAeU;AAGrBV,EAAM,cAAcD;AAEpBC,EAAM,eAAeW;AAErBX,EAAM,aAAa,CAAAY,MAASC,EAAehB,EAAM,WAAWe,CAAK,IAAI,IAAI,SAASA,CAAK,IAAIA,CAAK;AAEhGZ,EAAM,aAAac,EAAS;AAE5Bd,EAAM,iBAAiBe;AAEvBf,EAAM,UAAUA;","x_google_ignoreList":[0]}