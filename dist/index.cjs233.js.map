{"version":3,"file":"index.cjs233.js","sources":["../node_modules/buffer-equal-constant-time/index.js"],"sourcesContent":["/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n"],"names":["Buffer","require$$0","SlowBuffer","bufferEqualConstantTime","bufferEq","a","b","c","i","that","origBufEqual","origSlowBufEqual"],"mappings":"4JAEA,IAAIA,EAASC,YAAiB,EAAC,OAC3BC,EAAaD,EAAiB,UAAA,EAAC,WAEnCE,EAAiBC,EAEjB,SAASA,EAASC,EAAGC,EAAG,CAUtB,GAPI,CAACN,EAAO,SAASK,CAAC,GAAK,CAACL,EAAO,SAASM,CAAC,GAOzCD,EAAE,SAAWC,EAAE,OACjB,MAAO,GAIT,QADIC,EAAI,EACCC,EAAI,EAAGA,EAAIH,EAAE,OAAQG,IAE5BD,GAAKF,EAAEG,CAAC,EAAIF,EAAEE,CAAC,EAEjB,OAAOD,IAAM,CACf,CAEAH,EAAS,QAAU,UAAW,CAC5BJ,EAAO,UAAU,MAAQE,EAAW,UAAU,MAAQ,SAAeO,EAAM,CACzE,OAAOL,EAAS,KAAMK,CAAI,CAC3B,CACF,EAED,IAAIC,EAAeV,EAAO,UAAU,MAChCW,EAAmBT,EAAW,UAAU,MAC5C,OAAAE,EAAS,QAAU,UAAW,CAC5BJ,EAAO,UAAU,MAAQU,EACzBR,EAAW,UAAU,MAAQS,CAC9B","x_google_ignoreList":[0]}