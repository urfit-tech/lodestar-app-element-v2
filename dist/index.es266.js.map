{"version":3,"file":"index.es266.js","sources":["../node_modules/jsonwebtoken/node_modules/semver/ranges/outside.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n"],"names":["SemVer","require$$0","Comparator","require$$1","ANY","Range","require$$2","satisfies","require$$3","gt","require$$4","lt","require$$5","lte","require$$6","gte","require$$7","outside_1","version","range","hilo","options","gtfn","ltefn","ltfn","comp","ecomp","i","comparators","high","low","comparator"],"mappings":";;;;;;;;;;;;AAAA,QAAMA,IAASC,EAAA,GACTC,IAAaC,EAAA,GACb,EAAE,KAAAC,EAAG,IAAKF,GACVG,IAAQC,EAAA,GACRC,IAAYC,EAAA,GACZC,IAAKC,EAAA,GACLC,IAAKC,EAAA,GACLC,IAAMC,EAAA,GACNC,IAAMC,EAAA;AAuEZ,SAAAC,IArEgB,CAACC,GAASC,GAAOC,GAAMC,MAAY;AACjD,IAAAH,IAAU,IAAIlB,EAAOkB,GAASG,CAAO,GACrCF,IAAQ,IAAId,EAAMc,GAAOE,CAAO;AAEhC,QAAIC,GAAMC,GAAOC,GAAMC,GAAMC;AAC7B,YAAQN,GAAI;AAAA,MACV,KAAK;AACH,QAAAE,IAAOb,GACPc,IAAQV,GACRW,IAAOb,GACPc,IAAO,KACPC,IAAQ;AACR;AAAA,MACF,KAAK;AACH,QAAAJ,IAAOX,GACPY,IAAQR,GACRS,IAAOf,GACPgB,IAAO,KACPC,IAAQ;AACR;AAAA,MACF;AACE,cAAM,IAAI,UAAU,uCAAuC;AAAA,IACjE;AAGE,QAAInB,EAAUW,GAASC,GAAOE,CAAO;AACnC,aAAO;AAMT,aAASM,IAAI,GAAGA,IAAIR,EAAM,IAAI,QAAQ,EAAEQ,GAAG;AACzC,YAAMC,IAAcT,EAAM,IAAIQ,CAAC;AAE/B,UAAIE,IAAO,MACPC,IAAM;AAuBV,UArBAF,EAAY,QAAQ,CAACG,MAAe;AAClC,QAAIA,EAAW,WAAW3B,MACxB2B,IAAa,IAAI7B,EAAW,SAAS,IAEvC2B,IAAOA,KAAQE,GACfD,IAAMA,KAAOC,GACTT,EAAKS,EAAW,QAAQF,EAAK,QAAQR,CAAO,IAC9CQ,IAAOE,IACEP,EAAKO,EAAW,QAAQD,EAAI,QAAQT,CAAO,MACpDS,IAAMC;AAAA,MAET,CAAA,GAIGF,EAAK,aAAaJ,KAAQI,EAAK,aAAaH,MAM3C,CAACI,EAAI,YAAYA,EAAI,aAAaL,MACnCF,EAAML,GAASY,EAAI,MAAM;AAC3B,eAAO;AACF,UAAIA,EAAI,aAAaJ,KAASF,EAAKN,GAASY,EAAI,MAAM;AAC3D,eAAO;AAAA,IAEb;AACE,WAAO;AAAA,EACT;;","x_google_ignoreList":[0]}