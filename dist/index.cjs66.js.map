{"version":3,"file":"index.cjs66.js","sources":["../node_modules/jsonwebtoken/sign.js"],"sourcesContent":["const timespan = require('./lib/timespan');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst jws = require('jws');\nconst includes = require('lodash.includes');\nconst isBoolean = require('lodash.isboolean');\nconst isInteger = require('lodash.isinteger');\nconst isNumber = require('lodash.isnumber');\nconst isPlainObject = require('lodash.isplainobject');\nconst isString = require('lodash.isstring');\nconst once = require('lodash.once');\nconst { KeyObject, createSecretKey, createPrivateKey } = require('crypto')\n\nconst SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none'];\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nconst sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' },\n  allowInsecureKeySizes: { isValid: isBoolean, message: '\"allowInsecureKeySizes\" must be a boolean'},\n  allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '\"allowInvalidAsymmetricKeyTypes\" must be a boolean'}\n};\n\nconst registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      const validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nconst options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nconst options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  const isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  const header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {\n    try {\n      secretOrPrivateKey = createPrivateKey(secretOrPrivateKey)\n    } catch (_) {\n      try {\n        secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === 'string' ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey)\n      } catch (_) {\n        return failure(new Error('secretOrPrivateKey is not valid key material'));\n      }\n    }\n  }\n\n  if (header.alg.startsWith('HS') && secretOrPrivateKey.type !== 'secret') {\n    return failure(new Error((`secretOrPrivateKey must be a symmetric key when using ${header.alg}`)))\n  } else if (/^(?:RS|PS|ES)/.test(header.alg)) {\n    if (secretOrPrivateKey.type !== 'private') {\n      return failure(new Error((`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`)))\n    }\n    if (!options.allowInsecureKeySizes &&\n      !header.alg.startsWith('ES') &&\n      secretOrPrivateKey.asymmetricKeyDetails !== undefined && //KeyObject.asymmetricKeyDetails is supported in Node 15+\n      secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {\n      return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    const invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  if (!options.allowInvalidAsymmetricKeyTypes) {\n    try {\n      validateAsymmetricKey(header.alg, secretOrPrivateKey);\n    } catch (error) {\n      return failure(error);\n    }\n  }\n\n  const timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    const claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  const encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n        if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n          return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`))\n        }\n        callback(null, signature);\n      });\n  } else {\n    let signature = jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n    // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n    if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n      throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`)\n    }\n    return signature\n  }\n};\n"],"names":["timespan","require$$0","PS_SUPPORTED","require$$1","validateAsymmetricKey","require$$2","jws","require$$3","includes","require$$4","isBoolean","require$$5","isInteger","require$$6","isNumber","require$$7","isPlainObject","require$$8","isString","require$$9","once","require$$10","KeyObject","createSecretKey","createPrivateKey","require$$11","SUPPORTED_ALGS","sign_options_schema","value","registered_claims_schema","validate","schema","allowUnknown","object","parameterName","key","validator","validateOptions","options","validatePayload","payload","options_to_payload","options_for_objects","sign","secretOrPrivateKey","callback","isObjectPayload","header","failure","err","error","invalid_options","opt","timestamp","claim","encoding","signature"],"mappings":"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","x_google_ignoreList":[0]}