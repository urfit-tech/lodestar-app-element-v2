{"version":3,"file":"index.es7.js","sources":["../src/contexts/LanguageContext.tsx"],"sourcesContent":["import dayjs from 'dayjs'\nimport 'dayjs/locale/zh-tw'\nimport 'dayjs/locale/zh-cn'\nimport 'dayjs/locale/en'\nimport 'dayjs/locale/vi'\nimport { createContext, useEffect, useState } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport { useApp } from './AppContext'\n\nconst supportedLanguages = ['zh-tw', 'zh-cn', 'en-us', 'vi', 'acsi']\n\ntype LanguageProps = {\n  currentLanguage: string\n  locale: string\n  setCurrentLanguage?: (language: string) => void\n}\nconst defaultLanguage: LanguageProps = {\n  currentLanguage: 'zh-tw',\n  locale: 'zh-tw',\n}\n\nconst LanguageContext = createContext<LanguageProps>(defaultLanguage)\n\nexport const LanguageProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const { enabledModules, settings } = useApp()\n  const [currentLanguage, setCurrentLanguage] = useState('zh-tw')\n  const [locale, setLocale] = useState('zh-tw')\n  dayjs.locale('zh-tw')\n\n  useEffect(() => {\n    const browserLanguage = settings['language'] || navigator.language.split('-')[0]\n    const cachedLanguage = localStorage.getItem('kolable.app.language')\n    setCurrentLanguage(\n      enabledModules.locale\n        ? typeof cachedLanguage === 'string' && supportedLanguages.includes(cachedLanguage)\n          ? cachedLanguage\n          : supportedLanguages.includes(browserLanguage)\n            ? browserLanguage\n            : 'zh-tw'\n        : 'zh-tw',\n    )\n  }, [enabledModules, settings])\n\n  useEffect(() => {\n    switch (currentLanguage) {\n      case 'zh-tw':\n      case 'acsi':\n        setLocale('zh-tw')\n        dayjs.locale('zh-tw')\n        break\n      default:\n        setLocale(currentLanguage)\n        dayjs.locale('zh-tw')\n    }\n  }, [currentLanguage])\n\n  let messages: any = {}\n  try {\n    if (enabledModules.locale) {\n      messages = require(`../translations/locales/${currentLanguage}.json`)\n    }\n  } catch {}\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        currentLanguage,\n        locale,\n        setCurrentLanguage: (newLanguage: string) => {\n          if (supportedLanguages.includes(newLanguage)) {\n            localStorage.setItem('kolable.app.language', newLanguage)\n            setCurrentLanguage(newLanguage)\n          }\n        },\n      }}\n    >\n      <IntlProvider defaultLocale=\"zh-tw\" locale={locale} messages={messages}>\n        {children}\n      </IntlProvider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport default LanguageContext\n"],"names":["supportedLanguages","defaultLanguage","LanguageContext","createContext","LanguageProvider","children","enabledModules","settings","useApp","currentLanguage","setCurrentLanguage","useState","locale","setLocale","dayjs","useEffect","browserLanguage","cachedLanguage","messages","jsx","newLanguage","IntlProvider"],"mappings":";;;;;;;;;AASA,MAAMA,IAAqB,CAAC,SAAS,SAAS,SAAS,MAAM,MAAM,GAO7DC,IAAiC;AAAA,EACrC,iBAAiB;AAAA,EACjB,QAAQ;AACV,GAEMC,IAAkBC,EAA6BF,CAAe,GAEvDG,IAAsD,CAAC,EAAE,UAAAC,QAAe;AACnF,QAAM,EAAE,gBAAAC,GAAgB,UAAAC,EAAS,IAAIC,EAAO,GACtC,CAACC,GAAiBC,CAAkB,IAAIC,EAAS,OAAO,GACxD,CAACC,GAAQC,CAAS,IAAIF,EAAS,OAAO;AAC5C,EAAAG,EAAM,OAAO,OAAO,GAEpBC,EAAU,MAAM;AACR,UAAAC,IAAkBT,EAAS,YAAe,UAAU,SAAS,MAAM,GAAG,EAAE,CAAC,GACzEU,IAAiB,aAAa,QAAQ,sBAAsB;AAClE,IAAAP;AAAA,MACEJ,EAAe,SACX,OAAOW,KAAmB,YAAYjB,EAAmB,SAASiB,CAAc,IAC9EA,IACAjB,EAAmB,SAASgB,CAAe,IACzCA,IACA,UACJ;AAAA,IACN;AAAA,EAAA,GACC,CAACV,GAAgBC,CAAQ,CAAC,GAE7BQ,EAAU,MAAM;AACd,YAAQN,GAAiB;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AACH,QAAAI,EAAU,OAAO,GACjBC,EAAM,OAAO,OAAO;AACpB;AAAA,MACF;AACE,QAAAD,EAAUJ,CAAe,GACzBK,EAAM,OAAO,OAAO;AAAA,IAAA;AAAA,EACxB,GACC,CAACL,CAAe,CAAC;AAEpB,MAAIS,IAAgB,CAAC;AACjB,MAAA;AACF,IAAIZ,EAAe,WACNY,IAAA,QAAQ,2BAA2BT,CAAe,OAAO;AAAA,EACtE,QACM;AAAA,EAAA;AAGN,SAAAU,gBAAAA,EAAA;AAAA,IAACjB,EAAgB;AAAA,IAAhB;AAAA,MACC,OAAO;AAAA,QACL,iBAAAO;AAAA,QACA,QAAAG;AAAA,QACA,oBAAoB,CAACQ,MAAwB;AACvC,UAAApB,EAAmB,SAASoB,CAAW,MAC5B,aAAA,QAAQ,wBAAwBA,CAAW,GACxDV,EAAmBU,CAAW;AAAA,QAChC;AAAA,MAEJ;AAAA,MAEA,gCAACC,GAAa,EAAA,eAAc,SAAQ,QAAAT,GAAgB,UAAAM,GACjD,UAAAb,EACH,CAAA;AAAA,IAAA;AAAA,EACF;AAEJ;"}