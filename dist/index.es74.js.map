{"version":3,"file":"index.es74.js","sources":["../node_modules/ramda/es/mergeDeepWithKey.js"],"sourcesContent":["import _curry3 from \"./internal/_curry3.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;"],"names":["mergeDeepWithKey","_curry3","fn","lObj","rObj","mergeWithKey","k","lVal","rVal","_isObject"],"mappings":";;;AAgCG,IAACA,IAAgC,gBAAAC,EAAQ,SAASD,EAAiBE,GAAIC,GAAMC,GAAM;AACpF,SAAOC,EAAa,SAAUC,GAAGC,GAAMC,GAAM;AAC3C,WAAIC,EAAUF,CAAI,KAAKE,EAAUD,CAAI,IAC5BR,EAAiBE,GAAIK,GAAMC,CAAI,IAE/BN,EAAGI,GAAGC,GAAMC,CAAI;AAAA,EAE7B,GAAKL,GAAMC,CAAI;AACf,CAAC;","x_google_ignoreList":[0]}