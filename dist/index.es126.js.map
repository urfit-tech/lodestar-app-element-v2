{"version":3,"file":"index.es126.js","sources":["../../node_modules/@apollo/client/utilities/graphql/storeUtils.js"],"sourcesContent":["import { newInvariantError } from \"../globals/index.js\";\nimport { isNonNullObject } from \"../common/objects.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nimport { canonicalStringify } from \"../common/canonicalStringify.js\";\nexport function makeReference(id) {\n    return { __ref: String(id) };\n}\nexport function isReference(obj) {\n    return Boolean(obj && typeof obj === \"object\" && typeof obj.__ref === \"string\");\n}\nexport function isDocumentNode(value) {\n    return (isNonNullObject(value) &&\n        value.kind === \"Document\" &&\n        Array.isArray(value.definitions));\n}\nfunction isStringValue(value) {\n    return value.kind === \"StringValue\";\n}\nfunction isBooleanValue(value) {\n    return value.kind === \"BooleanValue\";\n}\nfunction isIntValue(value) {\n    return value.kind === \"IntValue\";\n}\nfunction isFloatValue(value) {\n    return value.kind === \"FloatValue\";\n}\nfunction isVariable(value) {\n    return value.kind === \"Variable\";\n}\nfunction isObjectValue(value) {\n    return value.kind === \"ObjectValue\";\n}\nfunction isListValue(value) {\n    return value.kind === \"ListValue\";\n}\nfunction isEnumValue(value) {\n    return value.kind === \"EnumValue\";\n}\nfunction isNullValue(value) {\n    return value.kind === \"NullValue\";\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw newInvariantError(84, name.value, value.kind);\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    \"connection\",\n    \"include\",\n    \"skip\",\n    \"client\",\n    \"rest\",\n    \"export\",\n    \"nonreactive\",\n];\n// Default stable JSON.stringify implementation used by getStoreKeyName. Can be\n// updated/replaced with something better by calling\n// getStoreKeyName.setStringify(newStringifyFunction).\nvar storeKeyNameStringify = canonicalStringify;\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n    if (args &&\n        directives &&\n        directives[\"connection\"] &&\n        directives[\"connection\"][\"key\"]) {\n        if (directives[\"connection\"][\"filter\"] &&\n            directives[\"connection\"][\"filter\"].length > 0) {\n            var filterKeys = directives[\"connection\"][\"filter\"] ?\n                directives[\"connection\"][\"filter\"]\n                : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return \"\".concat(directives[\"connection\"][\"key\"], \"(\").concat(storeKeyNameStringify(filteredArgs_1), \")\");\n        }\n        else {\n            return directives[\"connection\"][\"key\"];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        // We can't use `JSON.stringify` here since it's non-deterministic,\n        // and can lead to different store key names being created even though\n        // the `args` object used during creation has the same properties/values.\n        var stringifiedArgs = storeKeyNameStringify(args);\n        completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\".concat(key, \"(\").concat(storeKeyNameStringify(directives[key]), \")\");\n            }\n            else {\n                completeFieldName += \"@\".concat(key);\n            }\n        });\n    }\n    return completeFieldName;\n}, {\n    setStringify: function (s) {\n        var previous = storeKeyNameStringify;\n        storeKeyNameStringify = s;\n        return previous;\n    },\n});\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n    var fragments;\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === \"__typename\") {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else if (fragments) {\n            fragments.push(selection);\n        }\n        else {\n            fragments = [selection];\n        }\n    }\n    if (typeof result.__typename === \"string\") {\n        return result.__typename;\n    }\n    if (fragments) {\n        for (var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++) {\n            var selection = fragments_1[_b];\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === \"string\") {\n                return typename;\n            }\n        }\n    }\n}\nexport function isField(selection) {\n    return selection.kind === \"Field\";\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === \"InlineFragment\";\n}\n//# sourceMappingURL=storeUtils.js.map"],"names":["makeReference","id","isReference","obj","isDocumentNode","value","isNonNullObject","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","name","variables","nestedArgObj_1","variableValue","listValue","nestedArgArrayObj","newInvariantError","storeKeyNameFromField","field","directivesObj","directive","_a","getStoreKeyName","KNOWN_DIRECTIVES","storeKeyNameStringify","canonicalStringify","fieldName","args","directives","filterKeys","filteredArgs_1","key","completeFieldName","stringifiedArgs","s","previous","argumentsObjectFromField","argObj_1","resultKeyNameFromField","getTypenameFromResult","result","selectionSet","fragmentMap","fragments","_i","selection","isField","_b","fragments_1","typename","getFragmentFromSelection","isInlineFragment"],"mappings":"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","x_google_ignoreList":[0]}