{"version":3,"file":"index.es220.js","sources":["../../node_modules/@apollo/client/link/http/iterators/promise.js"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/promise.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function promiseIterator(promise) {\n    var resolved = false;\n    var iterator = {\n        next: function () {\n            if (resolved)\n                return Promise.resolve({\n                    value: undefined,\n                    done: true,\n                });\n            resolved = true;\n            return new Promise(function (resolve, reject) {\n                promise\n                    .then(function (value) {\n                    resolve({ value: value, done: false });\n                })\n                    .catch(reject);\n            });\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=promise.js.map"],"names":["promiseIterator","promise","resolved","iterator","resolve","reject","value","canUseAsyncIteratorSymbol"],"mappings":";AAKe,SAASA,EAAgBC,GAAS;AAC7C,MAAIC,IAAW,IACXC,IAAW;AAAA,IACX,MAAM,WAAY;AACd,aAAID,IACO,QAAQ,QAAQ;AAAA,QACnB,OAAO;AAAA,QACP,MAAM;AAAA,MAC1B,CAAiB,KACLA,IAAW,IACJ,IAAI,QAAQ,SAAUE,GAASC,GAAQ;AAC1C,QAAAJ,EACK,KAAK,SAAUK,GAAO;AACvB,UAAAF,EAAQ,EAAE,OAAOE,GAAO,MAAM,GAAK,CAAE;AAAA,QACxC,CAAA,EACI,MAAMD,CAAM;AAAA,MACjC,CAAa;AAAA,IACJ;AAAA,EACJ;AACD,SAAIE,MACAJ,EAAS,OAAO,aAAa,IAAI,WAAY;AACzC,WAAO;AAAA,EACV,IAEEA;AACX;","x_google_ignoreList":[0]}