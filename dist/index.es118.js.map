{"version":3,"file":"index.es118.js","sources":["../node_modules/axios/lib/helpers/formDataToJSON.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n"],"names":["parsePropPath","name","utils","match","arrayToObject","arr","obj","keys","len","key","formDataToJSON","formData","buildPath","path","value","target","index","isNumericKey","isLast"],"mappings":";AAWA,SAASA,EAAcC,GAAM;AAK3B,SAAOC,EAAM,SAAS,iBAAiBD,CAAI,EAAE,IAAI,CAAAE,MACxCA,EAAM,CAAC,MAAM,OAAO,KAAKA,EAAM,CAAC,KAAKA,EAAM,CAAC,CACpD;AACH;AASA,SAASC,EAAcC,GAAK;AAC1B,QAAMC,IAAM,CAAE,GACRC,IAAO,OAAO,KAAKF,CAAG;AAC5B,MAAI;AACJ,QAAMG,IAAMD,EAAK;AACjB,MAAIE;AACJ,OAAK,IAAI,GAAG,IAAID,GAAK;AACnB,IAAAC,IAAMF,EAAK,CAAC,GACZD,EAAIG,CAAG,IAAIJ,EAAII,CAAG;AAEpB,SAAOH;AACT;AASA,SAASI,EAAeC,GAAU;AAChC,WAASC,EAAUC,GAAMC,GAAOC,GAAQC,GAAO;AAC7C,QAAIf,IAAOY,EAAKG,GAAO;AAEvB,QAAIf,MAAS,YAAa,QAAO;AAEjC,UAAMgB,IAAe,OAAO,SAAS,CAAChB,CAAI,GACpCiB,IAASF,KAASH,EAAK;AAG7B,WAFAZ,IAAO,CAACA,KAAQC,EAAM,QAAQa,CAAM,IAAIA,EAAO,SAASd,GAEpDiB,KACEhB,EAAM,WAAWa,GAAQd,CAAI,IAC/Bc,EAAOd,CAAI,IAAI,CAACc,EAAOd,CAAI,GAAGa,CAAK,IAEnCC,EAAOd,CAAI,IAAIa,GAGV,CAACG,OAGN,CAACF,EAAOd,CAAI,KAAK,CAACC,EAAM,SAASa,EAAOd,CAAI,CAAC,OAC/Cc,EAAOd,CAAI,IAAI,CAAE,IAGJW,EAAUC,GAAMC,GAAOC,EAAOd,CAAI,GAAGe,CAAK,KAE3Cd,EAAM,QAAQa,EAAOd,CAAI,CAAC,MACtCc,EAAOd,CAAI,IAAIG,EAAcW,EAAOd,CAAI,CAAC,IAGpC,CAACgB;AAAA,EACZ;AAEE,MAAIf,EAAM,WAAWS,CAAQ,KAAKT,EAAM,WAAWS,EAAS,OAAO,GAAG;AACpE,UAAML,IAAM,CAAE;AAEd,WAAAJ,EAAM,aAAaS,GAAU,CAACV,GAAMa,MAAU;AAC5C,MAAAF,EAAUZ,EAAcC,CAAI,GAAGa,GAAOR,GAAK,CAAC;AAAA,IAClD,CAAK,GAEMA;AAAA,EACX;AAEE,SAAO;AACT;","x_google_ignoreList":[0]}