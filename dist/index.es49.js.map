{"version":3,"file":"index.es49.js","sources":["../node_modules/jsonwebtoken/verify.js"],"sourcesContent":["const JsonWebTokenError = require('./lib/JsonWebTokenError');\nconst NotBeforeError = require('./lib/NotBeforeError');\nconst TokenExpiredError = require('./lib/TokenExpiredError');\nconst decode = require('./decode');\nconst timespan = require('./lib/timespan');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst jws = require('jws');\nconst {KeyObject, createSecretKey, createPublicKey} = require(\"crypto\");\n\nconst PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst EC_KEY_ALGS = ['ES256', 'ES384', 'ES512'];\nconst RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  let done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  if (options.allowInvalidAsymmetricKeyTypes !== undefined && typeof options.allowInvalidAsymmetricKeyTypes !== 'boolean') {\n    return done(new JsonWebTokenError('allowInvalidAsymmetricKeyTypes must be a boolean'));\n  }\n\n  const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  const parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  let decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  const header = decodedToken.header;\n  let getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    const hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      return done(new JsonWebTokenError('please specify \"none\" in \"algorithms\" to verify unsigned tokens'));\n    }\n\n    if (secretOrPublicKey != null && !(secretOrPublicKey instanceof KeyObject)) {\n      try {\n        secretOrPublicKey = createPublicKey(secretOrPublicKey);\n      } catch (_) {\n        try {\n          secretOrPublicKey = createSecretKey(typeof secretOrPublicKey === 'string' ? Buffer.from(secretOrPublicKey) : secretOrPublicKey);\n        } catch (_) {\n          return done(new JsonWebTokenError('secretOrPublicKey is not valid key material'))\n        }\n      }\n    }\n\n    if (!options.algorithms) {\n      if (secretOrPublicKey.type === 'secret') {\n        options.algorithms = HS_ALGS;\n      } else if (['rsa', 'rsa-pss'].includes(secretOrPublicKey.asymmetricKeyType)) {\n        options.algorithms = RSA_KEY_ALGS\n      } else if (secretOrPublicKey.asymmetricKeyType === 'ec') {\n        options.algorithms = EC_KEY_ALGS\n      } else {\n        options.algorithms = PUB_KEY_ALGS\n      }\n    }\n\n    if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    if (header.alg.startsWith('HS') && secretOrPublicKey.type !== 'secret') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be a symmetric key when using ${header.alg}`)))\n    } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey.type !== 'public') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be an asymmetric key when using ${header.alg}`)))\n    }\n\n    if (!options.allowInvalidAsymmetricKeyTypes) {\n      try {\n        validateAsymmetricKey(header.alg, secretOrPublicKey);\n      } catch (e) {\n        return done(e);\n      }\n    }\n\n    let valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    const payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      const match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      const invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      const maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      const signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n"],"names":["JsonWebTokenError","require$$0","NotBeforeError","require$$1","TokenExpiredError","require$$2","decode","require$$3","timespan","require$$4","validateAsymmetricKey","require$$5","PS_SUPPORTED","require$$6","jws","require$$7","KeyObject","createSecretKey","createPublicKey","require$$8","PUB_KEY_ALGS","EC_KEY_ALGS","RSA_KEY_ALGS","HS_ALGS","verify","jwtString","secretOrPublicKey","options","callback","done","err","data","clockTimestamp","parts","decodedToken","header","getSecret","secretCallback","hasSignature","e","valid","payload","audiences","targetAudience","audience","maxAgeTimestamp","signature"],"mappings":"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","x_google_ignoreList":[0]}