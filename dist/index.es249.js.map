{"version":3,"file":"index.es249.js","sources":["../../node_modules/@apollo/client/cache/inmemory/helpers.js"],"sourcesContent":["import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude, isNonNullObject, compact, createFragmentMap, getFragmentDefinitions, isArray, } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function isNullish(value) {\n    return value === null || value === void 0;\n}\nexport { isArray };\nexport function defaultDataIdFromObject(_a, context) {\n    var __typename = _a.__typename, id = _a.id, _id = _a._id;\n    if (typeof __typename === \"string\") {\n        if (context) {\n            context.keyObject =\n                !isNullish(id) ? { id: id }\n                    : !isNullish(_id) ? { _id: _id }\n                        : void 0;\n        }\n        // If there is no object.id, fall back to object._id.\n        if (isNullish(id) && !isNullish(_id)) {\n            id = _id;\n        }\n        if (!isNullish(id)) {\n            return \"\".concat(__typename, \":\").concat(typeof id === \"number\" || typeof id === \"string\" ?\n                id\n                : JSON.stringify(id));\n        }\n    }\n}\nvar defaultConfig = {\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    // Thanks to the shouldCanonizeResults helper, this should be the only line\n    // you have to change to reenable canonization by default in the future.\n    canonizeResults: false,\n};\nexport function normalizeConfig(config) {\n    return compact(defaultConfig, config);\n}\nexport function shouldCanonizeResults(config) {\n    var value = config.canonizeResults;\n    return value === void 0 ? defaultConfig.canonizeResults : value;\n}\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n    return isReference(objectOrReference) ?\n        store.get(objectOrReference.__ref, \"__typename\")\n        : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n    var match = storeFieldName.match(TypeOrFieldNameRegExp);\n    return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n    if (isNonNullObject(result)) {\n        return isArray(result) ?\n            result.every(function (item) {\n                return selectionSetMatchesResult(selectionSet, item, variables);\n            })\n            : selectionSet.selections.every(function (field) {\n                if (isField(field) && shouldInclude(field, variables)) {\n                    var key = resultKeyNameFromField(field);\n                    return (hasOwn.call(result, key) &&\n                        (!field.selectionSet ||\n                            selectionSetMatchesResult(field.selectionSet, result[key], variables)));\n                }\n                // If the selection has been skipped with @skip(true) or\n                // @include(false), it should not count against the matching. If\n                // the selection is not a field, it must be a fragment (inline or\n                // named). We will determine if selectionSetMatchesResult for that\n                // fragment when we get to it, so for now we return true.\n                return true;\n            });\n    }\n    return false;\n}\nexport function storeValueIsStoreObject(value) {\n    return isNonNullObject(value) && !isReference(value) && !isArray(value);\n}\nexport function makeProcessedFieldsMerger() {\n    return new DeepMerger();\n}\nexport function extractFragmentContext(document, fragments) {\n    // FragmentMap consisting only of fragments defined directly in document, not\n    // including other fragments registered in the FragmentRegistry.\n    var fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n    return {\n        fragmentMap: fragmentMap,\n        lookupFragment: function (name) {\n            var def = fragmentMap[name];\n            if (!def && fragments) {\n                def = fragments.lookup(name);\n            }\n            return def || null;\n        },\n    };\n}\n//# sourceMappingURL=helpers.js.map"],"names":["hasOwn","isNullish","value","defaultDataIdFromObject","_a","context","__typename","id","_id","defaultConfig","normalizeConfig","config","compact","shouldCanonizeResults","getTypenameFromStoreObject","store","objectOrReference","isReference","TypeOrFieldNameRegExp","fieldNameFromStoreName","storeFieldName","match","selectionSetMatchesResult","selectionSet","result","variables","isNonNullObject","isArray","item","field","isField","shouldInclude","key","resultKeyNameFromField","storeValueIsStoreObject","makeProcessedFieldsMerger","DeepMerger","extractFragmentContext","document","fragments","fragmentMap","createFragmentMap","getFragmentDefinitions","name","def"],"mappings":";;;;;;;;AACU,IAACA,IAAS,OAAO,UAAU;AAC9B,SAASC,EAAUC,GAAO;AAC7B,SAAOA,KAAU;AACrB;AAEO,SAASC,EAAwBC,GAAIC,GAAS;AACjD,MAAIC,IAAaF,EAAG,YAAYG,IAAKH,EAAG,IAAII,IAAMJ,EAAG;AACrD,MAAI,OAAOE,KAAe,aAClBD,MACAA,EAAQ,YACHJ,EAAUM,CAAE,IACNN,EAAUO,CAAG,IACV,SADc,EAAE,KAAKA,EAAG,IADjB,EAAE,IAAID,EAAE,IAK7BN,EAAUM,CAAE,KAAK,CAACN,EAAUO,CAAG,MAC/BD,IAAKC,IAEL,CAACP,EAAUM,CAAE;AACb,WAAO,GAAG,OAAOD,GAAY,GAAG,EAAE,OAAO,OAAOC,KAAO,YAAY,OAAOA,KAAO,WAC7EA,IACE,KAAK,UAAUA,CAAE,CAAC;AAGpC;AACA,IAAIE,IAAgB;AAAA,EAChB,kBAAkBN;AAAA,EAClB,aAAa;AAAA,EACb,eAAe;AAAA;AAAA;AAAA,EAGf,iBAAiB;AACrB;AACO,SAASO,EAAgBC,GAAQ;AACpC,SAAOC,EAAQH,GAAeE,CAAM;AACxC;AACO,SAASE,EAAsBF,GAAQ;AAC1C,MAAIT,IAAQS,EAAO;AACnB,SAAOT,MAAU,SAASO,EAAc,kBAAkBP;AAC9D;AACO,SAASY,EAA2BC,GAAOC,GAAmB;AACjE,SAAOC,EAAYD,CAAiB,IAChCD,EAAM,IAAIC,EAAkB,OAAO,YAAY,IAC7CA,KAAqBA,EAAkB;AACjD;AACU,IAACE,IAAwB;AAC5B,SAASC,EAAuBC,GAAgB;AACnD,MAAIC,IAAQD,EAAe,MAAMF,CAAqB;AACtD,SAAOG,IAAQA,EAAM,CAAC,IAAID;AAC9B;AACO,SAASE,EAA0BC,GAAcC,GAAQC,GAAW;AACvE,SAAIC,EAAgBF,CAAM,IACfG,EAAQH,CAAM,IACjBA,EAAO,MAAM,SAAUI,GAAM;AACzB,WAAON,EAA0BC,GAAcK,GAAMH,CAAS;AAAA,EACjE,CAAA,IACCF,EAAa,WAAW,MAAM,SAAUM,GAAO;AAC7C,QAAIC,EAAQD,CAAK,KAAKE,EAAcF,GAAOJ,CAAS,GAAG;AACnD,UAAIO,IAAMC,EAAuBJ,CAAK;AACtC,aAAQ7B,EAAO,KAAKwB,GAAQQ,CAAG,MAC1B,CAACH,EAAM,gBACJP,EAA0BO,EAAM,cAAcL,EAAOQ,CAAG,GAAGP,CAAS;AAAA,IAChG;AAMgB,WAAO;AAAA,EACvB,CAAa,IAEF;AACX;AACO,SAASS,EAAwBhC,GAAO;AAC3C,SAAOwB,EAAgBxB,CAAK,KAAK,CAACe,EAAYf,CAAK,KAAK,CAACyB,EAAQzB,CAAK;AAC1E;AACO,SAASiC,IAA4B;AACxC,SAAO,IAAIC,EAAY;AAC3B;AACO,SAASC,EAAuBC,GAAUC,GAAW;AAGxD,MAAIC,IAAcC,EAAkBC,EAAuBJ,CAAQ,CAAC;AACpE,SAAO;AAAA,IACH,aAAaE;AAAA,IACb,gBAAgB,SAAUG,GAAM;AAC5B,UAAIC,IAAMJ,EAAYG,CAAI;AAC1B,aAAI,CAACC,KAAOL,MACRK,IAAML,EAAU,OAAOI,CAAI,IAExBC,KAAO;AAAA,IACjB;AAAA,EACJ;AACL;","x_google_ignoreList":[0]}