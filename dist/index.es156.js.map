{"version":3,"file":"index.es156.js","sources":["../../node_modules/@apollo/client/utilities/graphql/DocumentTransform.js"],"sourcesContent":["import { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet } from \"../common/canUse.js\";\nimport { checkDocument } from \"./getFromAST.js\";\nimport { invariant } from \"../globals/index.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes } from \"../caching/index.js\";\nfunction identity(document) {\n    return document;\n}\nvar DocumentTransform = /** @class */ (function () {\n    function DocumentTransform(transform, options) {\n        if (options === void 0) { options = Object.create(null); }\n        this.resultCache = canUseWeakSet ? new WeakSet() : new Set();\n        this.transform = transform;\n        if (options.getCacheKey) {\n            // Override default `getCacheKey` function, which returns [document].\n            this.getCacheKey = options.getCacheKey;\n        }\n        this.cached = options.cache !== false;\n        this.resetCache();\n    }\n    // This default implementation of getCacheKey can be overridden by providing\n    // options.getCacheKey to the DocumentTransform constructor. In general, a\n    // getCacheKey function may either return an array of keys (often including\n    // the document) to be used as a cache key, or undefined to indicate the\n    // transform for this document should not be cached.\n    DocumentTransform.prototype.getCacheKey = function (document) {\n        return [document];\n    };\n    DocumentTransform.identity = function () {\n        // No need to cache this transform since it just returns the document\n        // unchanged. This should save a bit of memory that would otherwise be\n        // needed to populate the `documentCache` of this transform.\n        return new DocumentTransform(identity, { cache: false });\n    };\n    DocumentTransform.split = function (predicate, left, right) {\n        if (right === void 0) { right = DocumentTransform.identity(); }\n        return Object.assign(new DocumentTransform(function (document) {\n            var documentTransform = predicate(document) ? left : right;\n            return documentTransform.transformDocument(document);\n        }, \n        // Reasonably assume both `left` and `right` transforms handle their own caching\n        { cache: false }), { left: left, right: right });\n    };\n    /**\n     * Resets the internal cache of this transform, if it has one.\n     */\n    DocumentTransform.prototype.resetCache = function () {\n        var _this = this;\n        if (this.cached) {\n            var stableCacheKeys_1 = new Trie(canUseWeakMap);\n            this.performWork = wrap(DocumentTransform.prototype.performWork.bind(this), {\n                makeCacheKey: function (document) {\n                    var cacheKeys = _this.getCacheKey(document);\n                    if (cacheKeys) {\n                        invariant(Array.isArray(cacheKeys), 68);\n                        return stableCacheKeys_1.lookupArray(cacheKeys);\n                    }\n                },\n                max: cacheSizes[\"documentTransform.cache\"],\n                cache: (WeakCache),\n            });\n        }\n    };\n    DocumentTransform.prototype.performWork = function (document) {\n        checkDocument(document);\n        return this.transform(document);\n    };\n    DocumentTransform.prototype.transformDocument = function (document) {\n        // If a user passes an already transformed result back to this function,\n        // immediately return it.\n        if (this.resultCache.has(document)) {\n            return document;\n        }\n        var transformedDocument = this.performWork(document);\n        this.resultCache.add(transformedDocument);\n        return transformedDocument;\n    };\n    DocumentTransform.prototype.concat = function (otherTransform) {\n        var _this = this;\n        return Object.assign(new DocumentTransform(function (document) {\n            return otherTransform.transformDocument(_this.transformDocument(document));\n        }, \n        // Reasonably assume both transforms handle their own caching\n        { cache: false }), {\n            left: this,\n            right: otherTransform,\n        });\n    };\n    return DocumentTransform;\n}());\nexport { DocumentTransform };\n//# sourceMappingURL=DocumentTransform.js.map"],"names":["identity","document","DocumentTransform","transform","options","canUseWeakSet","predicate","left","right","documentTransform","_this","stableCacheKeys_1","Trie","canUseWeakMap","wrap","cacheKeys","invariant","cacheSizes","WeakCache","checkDocument","transformedDocument","otherTransform"],"mappings":";;;;;;;;AAOA,SAASA,EAASC,GAAU;AACxB,SAAOA;AACX;AACG,IAACC;AAAA;AAAA,EAAmC,WAAY;AAC/C,aAASA,EAAkBC,GAAWC,GAAS;AAC3C,MAAIA,MAAY,WAAUA,IAAU,uBAAO,OAAO,IAAI,IACtD,KAAK,cAAcC,IAAgB,oBAAI,QAAS,IAAG,oBAAI,IAAK,GAC5D,KAAK,YAAYF,GACbC,EAAQ,gBAER,KAAK,cAAcA,EAAQ,cAE/B,KAAK,SAASA,EAAQ,UAAU,IAChC,KAAK,WAAY;AAAA,IACzB;AAMI,WAAAF,EAAkB,UAAU,cAAc,SAAUD,GAAU;AAC1D,aAAO,CAACA,CAAQ;AAAA,IACnB,GACDC,EAAkB,WAAW,WAAY;AAIrC,aAAO,IAAIA,EAAkBF,GAAU,EAAE,OAAO,GAAK,CAAE;AAAA,IAC1D,GACDE,EAAkB,QAAQ,SAAUI,GAAWC,GAAMC,GAAO;AACxD,aAAIA,MAAU,WAAUA,IAAQN,EAAkB,SAAQ,IACnD,OAAO,OAAO,IAAIA;AAAA,QAAkB,SAAUD,GAAU;AAC3D,cAAIQ,IAAoBH,EAAUL,CAAQ,IAAIM,IAAOC;AACrD,iBAAOC,EAAkB,kBAAkBR,CAAQ;AAAA,QACtD;AAAA;AAAA,QAED,EAAE,OAAO,GAAK;AAAA,MAAE,GAAG,EAAE,MAAMM,GAAM,OAAOC,GAAO;AAAA,IAClD,GAIDN,EAAkB,UAAU,aAAa,WAAY;AACjD,UAAIQ,IAAQ;AACZ,UAAI,KAAK,QAAQ;AACb,YAAIC,IAAoB,IAAIC,EAAKC,CAAa;AAC9C,aAAK,cAAcC,EAAKZ,EAAkB,UAAU,YAAY,KAAK,IAAI,GAAG;AAAA,UACxE,cAAc,SAAUD,GAAU;AAC9B,gBAAIc,IAAYL,EAAM,YAAYT,CAAQ;AAC1C,gBAAIc;AACA,qBAAAC,EAAU,MAAM,QAAQD,CAAS,GAAG,EAAE,GAC/BJ,EAAkB,YAAYI,CAAS;AAAA,UAErD;AAAA,UACD,KAAKE,EAAW,yBAAyB;AAAA,UACzC,OAAQC;AAAA,QACxB,CAAa;AAAA,MACb;AAAA,IACK,GACDhB,EAAkB,UAAU,cAAc,SAAUD,GAAU;AAC1D,aAAAkB,EAAclB,CAAQ,GACf,KAAK,UAAUA,CAAQ;AAAA,IACjC,GACDC,EAAkB,UAAU,oBAAoB,SAAUD,GAAU;AAGhE,UAAI,KAAK,YAAY,IAAIA,CAAQ;AAC7B,eAAOA;AAEX,UAAImB,IAAsB,KAAK,YAAYnB,CAAQ;AACnD,kBAAK,YAAY,IAAImB,CAAmB,GACjCA;AAAA,IACV,GACDlB,EAAkB,UAAU,SAAS,SAAUmB,GAAgB;AAC3D,UAAIX,IAAQ;AACZ,aAAO,OAAO,OAAO,IAAIR;AAAA,QAAkB,SAAUD,GAAU;AAC3D,iBAAOoB,EAAe,kBAAkBX,EAAM,kBAAkBT,CAAQ,CAAC;AAAA,QAC5E;AAAA;AAAA,QAED,EAAE,OAAO,GAAK;AAAA,MAAE,GAAG;AAAA,QACf,MAAM;AAAA,QACN,OAAOoB;AAAA,MACnB,CAAS;AAAA,IACJ,GACMnB;AAAA,EACX,EAAG;AAAA;","x_google_ignoreList":[0]}