{"version":3,"file":"index.cjs130.js","sources":["../node_modules/filter-obj/index.js"],"sourcesContent":["export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n"],"names":["includeKeys","object","predicate","result","key","descriptor","value"],"mappings":"gFAAO,SAASA,EAAYC,EAAQC,EAAW,CAC9C,MAAMC,EAAS,CAAE,EAEjB,GAAI,MAAM,QAAQD,CAAS,EAC1B,UAAWE,KAAOF,EAAW,CAC5B,MAAMG,EAAa,OAAO,yBAAyBJ,EAAQG,CAAG,EAC1DC,GAAY,YACf,OAAO,eAAeF,EAAQC,EAAKC,CAAU,CAEjD,KAGE,WAAWD,KAAO,QAAQ,QAAQH,CAAM,EAAG,CAC1C,MAAMI,EAAa,OAAO,yBAAyBJ,EAAQG,CAAG,EAC9D,GAAIC,EAAW,WAAY,CAC1B,MAAMC,EAAQL,EAAOG,CAAG,EACpBF,EAAUE,EAAKE,EAAOL,CAAM,GAC/B,OAAO,eAAeE,EAAQC,EAAKC,CAAU,CAElD,CACA,CAGC,OAAOF,CACR","x_google_ignoreList":[0]}