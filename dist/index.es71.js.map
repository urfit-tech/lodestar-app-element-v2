{"version":3,"file":"index.es71.js","sources":["../../node_modules/@apollo/client/utilities/caching/sizes.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { global } from \"../globals/index.js\";\nvar cacheSizeSymbol = Symbol.for(\"apollo.cacheSize\");\n/**\n *\n * The global cache size configuration for Apollo Client.\n *\n * @remarks\n *\n * You can directly modify this object, but any modification will\n * only have an effect on caches that are created after the modification.\n *\n * So for global caches, such as `parser`, `canonicalStringify` and `print`,\n * you might need to call `.reset` on them, which will essentially re-create them.\n *\n * Alternatively, you can set `globalThis[Symbol.for(\"apollo.cacheSize\")]` before\n * you load the Apollo Client package:\n *\n * @example\n * ```ts\n * globalThis[Symbol.for(\"apollo.cacheSize\")] = {\n *   parser: 100\n * } satisfies Partial<CacheSizes> // the `satisfies` is optional if using TypeScript\n * ```\n */\nexport var cacheSizes = __assign({}, global[cacheSizeSymbol]);\n//# sourceMappingURL=sizes.js.map"],"names":["cacheSizeSymbol","cacheSizes","__assign","global"],"mappings":";;;AAEA,IAAIA,IAAkB,OAAO,IAAI,kBAAkB,GAuBxCC,IAAaC,EAAS,IAAIC,EAAOH,CAAe,CAAC;","x_google_ignoreList":[0]}