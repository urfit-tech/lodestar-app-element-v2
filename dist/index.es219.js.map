{"version":3,"file":"index.es219.js","sources":["../node_modules/jsonwebtoken/node_modules/semver/functions/cmp.js"],"sourcesContent":["const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n"],"names":["eq","require$$0","neq","require$$1","gt","require$$2","gte","require$$3","lt","require$$4","lte","require$$5","cmp_1","a","op","b","loose"],"mappings":";;;;;;;;;;AAAA,QAAMA,IAAKC,EAAA,GACLC,IAAMC,EAAA,GACNC,IAAKC,EAAA,GACLC,IAAMC,EAAA,GACNC,IAAKC,EAAA,GACLC,IAAMC,EAAA;AA8CZ,SAAAC,IA5CY,CAACC,GAAGC,GAAIC,GAAGC,MAAU;AAC/B,YAAQF,GAAE;AAAA,MACR,KAAK;AACH,eAAI,OAAOD,KAAM,aACfA,IAAIA,EAAE,UAEJ,OAAOE,KAAM,aACfA,IAAIA,EAAE,UAEDF,MAAME;AAAA,MAEf,KAAK;AACH,eAAI,OAAOF,KAAM,aACfA,IAAIA,EAAE,UAEJ,OAAOE,KAAM,aACfA,IAAIA,EAAE,UAEDF,MAAME;AAAA,MAEf,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOf,EAAGa,GAAGE,GAAGC,CAAK;AAAA,MAEvB,KAAK;AACH,eAAOd,EAAIW,GAAGE,GAAGC,CAAK;AAAA,MAExB,KAAK;AACH,eAAOZ,EAAGS,GAAGE,GAAGC,CAAK;AAAA,MAEvB,KAAK;AACH,eAAOV,EAAIO,GAAGE,GAAGC,CAAK;AAAA,MAExB,KAAK;AACH,eAAOR,EAAGK,GAAGE,GAAGC,CAAK;AAAA,MAEvB,KAAK;AACH,eAAON,EAAIG,GAAGE,GAAGC,CAAK;AAAA,MAExB;AACE,cAAM,IAAI,UAAU,qBAAqBF,CAAE,EAAE;AAAA,IACnD;AAAA,EACA;;","x_google_ignoreList":[0]}