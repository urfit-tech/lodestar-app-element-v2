{"version":3,"file":"index.cjs27.js","sources":["../../node_modules/@apollo/client/link/error/index.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nexport function onError(errorHandler) {\n    return new ApolloLink(function (operation, forward) {\n        return new Observable(function (observer) {\n            var sub;\n            var retriedSub;\n            var retriedResult;\n            try {\n                sub = forward(operation).subscribe({\n                    next: function (result) {\n                        if (result.errors) {\n                            retriedResult = errorHandler({\n                                graphQLErrors: result.errors,\n                                response: result,\n                                operation: operation,\n                                forward: forward,\n                            });\n                            if (retriedResult) {\n                                retriedSub = retriedResult.subscribe({\n                                    next: observer.next.bind(observer),\n                                    error: observer.error.bind(observer),\n                                    complete: observer.complete.bind(observer),\n                                });\n                                return;\n                            }\n                        }\n                        observer.next(result);\n                    },\n                    error: function (networkError) {\n                        retriedResult = errorHandler({\n                            operation: operation,\n                            networkError: networkError,\n                            //Network errors can return GraphQL errors on for example a 403\n                            graphQLErrors: (networkError &&\n                                networkError.result &&\n                                networkError.result.errors) ||\n                                void 0,\n                            forward: forward,\n                        });\n                        if (retriedResult) {\n                            retriedSub = retriedResult.subscribe({\n                                next: observer.next.bind(observer),\n                                error: observer.error.bind(observer),\n                                complete: observer.complete.bind(observer),\n                            });\n                            return;\n                        }\n                        observer.error(networkError);\n                    },\n                    complete: function () {\n                        // disable the previous sub from calling complete on observable\n                        // if retry is in flight.\n                        if (!retriedResult) {\n                            observer.complete.bind(observer)();\n                        }\n                    },\n                });\n            }\n            catch (e) {\n                errorHandler({ networkError: e, operation: operation, forward: forward });\n                observer.error(e);\n            }\n            return function () {\n                if (sub)\n                    sub.unsubscribe();\n                if (retriedSub)\n                    sub.unsubscribe();\n            };\n        });\n    });\n}\nvar ErrorLink = /** @class */ (function (_super) {\n    __extends(ErrorLink, _super);\n    function ErrorLink(errorHandler) {\n        var _this = _super.call(this) || this;\n        _this.link = onError(errorHandler);\n        return _this;\n    }\n    ErrorLink.prototype.request = function (operation, forward) {\n        return this.link.request(operation, forward);\n    };\n    return ErrorLink;\n}(ApolloLink));\nexport { ErrorLink };\n//# sourceMappingURL=index.js.map"],"names":["onError","errorHandler","ApolloLink","operation","forward","Observable","observer","sub","retriedSub","retriedResult","result","networkError","e","_super","__extends","ErrorLink","_this"],"mappings":"4MAGO,SAASA,EAAQC,EAAc,CAClC,OAAO,IAAIC,EAAU,WAAC,SAAUC,EAAWC,EAAS,CAChD,OAAO,IAAIC,EAAAA,WAAW,SAAUC,EAAU,CACtC,IAAIC,EACAC,EACAC,EACJ,GAAI,CACAF,EAAMH,EAAQD,CAAS,EAAE,UAAU,CAC/B,KAAM,SAAUO,EAAQ,CACpB,GAAIA,EAAO,SACPD,EAAgBR,EAAa,CACzB,cAAeS,EAAO,OACtB,SAAUA,EACV,UAAWP,EACX,QAASC,CACzC,CAA6B,EACGK,GAAe,CACfD,EAAaC,EAAc,UAAU,CACjC,KAAMH,EAAS,KAAK,KAAKA,CAAQ,EACjC,MAAOA,EAAS,MAAM,KAAKA,CAAQ,EACnC,SAAUA,EAAS,SAAS,KAAKA,CAAQ,CAC7E,CAAiC,EACD,MAChC,CAEwBA,EAAS,KAAKI,CAAM,CACvB,EACD,MAAO,SAAUC,EAAc,CAW3B,GAVAF,EAAgBR,EAAa,CACzB,UAAWE,EACX,aAAcQ,EAEd,cAAgBA,GACZA,EAAa,QACbA,EAAa,OAAO,QACpB,OACJ,QAASP,CACrC,CAAyB,EACGK,EAAe,CACfD,EAAaC,EAAc,UAAU,CACjC,KAAMH,EAAS,KAAK,KAAKA,CAAQ,EACjC,MAAOA,EAAS,MAAM,KAAKA,CAAQ,EACnC,SAAUA,EAAS,SAAS,KAAKA,CAAQ,CACzE,CAA6B,EACD,MAC5B,CACwBA,EAAS,MAAMK,CAAY,CAC9B,EACD,SAAU,UAAY,CAGbF,GACDH,EAAS,SAAS,KAAKA,CAAQ,EAAG,CAEzC,CACrB,CAAiB,CACjB,OACmBM,EAAG,CACNX,EAAa,CAAE,aAAcW,EAAG,UAAWT,EAAW,QAASC,EAAS,EACxEE,EAAS,MAAMM,CAAC,CAChC,CACY,OAAO,UAAY,CACXL,GACAA,EAAI,YAAa,EACjBC,GACAD,EAAI,YAAa,CACxB,CACb,CAAS,CACT,CAAK,CACL,EAC+B,SAAUM,EAAQ,CAC7CC,EAAS,UAACC,EAAWF,CAAM,EAC3B,SAASE,EAAUd,EAAc,CAC7B,IAAIe,EAAQH,EAAO,KAAK,IAAI,GAAK,KACjC,OAAAG,EAAM,KAAOhB,EAAQC,CAAY,EAC1Be,CACf,CACI,OAAAD,EAAU,UAAU,QAAU,SAAUZ,EAAWC,EAAS,CACxD,OAAO,KAAK,KAAK,QAAQD,EAAWC,CAAO,CAC9C,EACMW,CACX,GAAEb,YAAU","x_google_ignoreList":[0]}