{"version":3,"file":"index.es216.js","sources":["../../node_modules/@apollo/client/link/http/responseIterator.js"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/index.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../utilities/index.js\";\nimport asyncIterator from \"./iterators/async.js\";\nimport nodeStreamIterator from \"./iterators/nodeStream.js\";\nimport promiseIterator from \"./iterators/promise.js\";\nimport readerIterator from \"./iterators/reader.js\";\nfunction isNodeResponse(value) {\n    return !!value.body;\n}\nfunction isReadableStream(value) {\n    return !!value.getReader;\n}\nfunction isAsyncIterableIterator(value) {\n    return !!(canUseAsyncIteratorSymbol &&\n        value[Symbol.asyncIterator]);\n}\nfunction isStreamableBlob(value) {\n    return !!value.stream;\n}\nfunction isBlob(value) {\n    return !!value.arrayBuffer;\n}\nfunction isNodeReadableStream(value) {\n    return !!value.pipe;\n}\nexport function responseIterator(response) {\n    var body = response;\n    if (isNodeResponse(response))\n        body = response.body;\n    if (isAsyncIterableIterator(body))\n        return asyncIterator(body);\n    if (isReadableStream(body))\n        return readerIterator(body.getReader());\n    // this errors without casting to ReadableStream<T>\n    // because Blob.stream() returns a NodeJS ReadableStream\n    if (isStreamableBlob(body)) {\n        return readerIterator(body.stream().getReader());\n    }\n    if (isBlob(body))\n        return promiseIterator(body.arrayBuffer());\n    if (isNodeReadableStream(body))\n        return nodeStreamIterator(body);\n    throw new Error(\"Unknown body type for responseIterator. Please pass a streamable response.\");\n}\n//# sourceMappingURL=responseIterator.js.map"],"names":["isNodeResponse","value","isReadableStream","isAsyncIterableIterator","canUseAsyncIteratorSymbol","isStreamableBlob","isBlob","isNodeReadableStream","responseIterator","response","body","asyncIterator","readerIterator","promiseIterator","nodeStreamIterator"],"mappings":";;;;;AASA,SAASA,EAAeC,GAAO;AAC3B,SAAO,CAAC,CAACA,EAAM;AACnB;AACA,SAASC,EAAiBD,GAAO;AAC7B,SAAO,CAAC,CAACA,EAAM;AACnB;AACA,SAASE,EAAwBF,GAAO;AACpC,SAAO,CAAC,EAAEG,KACNH,EAAM,OAAO,aAAa;AAClC;AACA,SAASI,EAAiBJ,GAAO;AAC7B,SAAO,CAAC,CAACA,EAAM;AACnB;AACA,SAASK,EAAOL,GAAO;AACnB,SAAO,CAAC,CAACA,EAAM;AACnB;AACA,SAASM,EAAqBN,GAAO;AACjC,SAAO,CAAC,CAACA,EAAM;AACnB;AACO,SAASO,EAAiBC,GAAU;AACvC,MAAIC,IAAOD;AAGX,MAFIT,EAAeS,CAAQ,MACvBC,IAAOD,EAAS,OAChBN,EAAwBO,CAAI;AAC5B,WAAOC,EAAcD,CAAI;AAC7B,MAAIR,EAAiBQ,CAAI;AACrB,WAAOE,EAAeF,EAAK,WAAW;AAG1C,MAAIL,EAAiBK,CAAI;AACrB,WAAOE,EAAeF,EAAK,OAAQ,EAAC,UAAS,CAAE;AAEnD,MAAIJ,EAAOI,CAAI;AACX,WAAOG,EAAgBH,EAAK,aAAa;AAC7C,MAAIH,EAAqBG,CAAI;AACzB,WAAOI,EAAmBJ,CAAI;AAClC,QAAM,IAAI,MAAM,4EAA4E;AAChG;","x_google_ignoreList":[0]}