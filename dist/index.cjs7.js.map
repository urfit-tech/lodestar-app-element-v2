{"version":3,"file":"index.cjs7.js","sources":["../src/contexts/LanguageContext.tsx"],"sourcesContent":["import dayjs from 'dayjs'\nimport 'dayjs/locale/zh-tw'\nimport 'dayjs/locale/zh-cn'\nimport 'dayjs/locale/en'\nimport 'dayjs/locale/vi'\nimport { createContext, useEffect, useState } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport { useApp } from './AppContext'\n\nconst supportedLanguages = ['zh-tw', 'zh-cn', 'en-us', 'vi', 'acsi']\n\ntype LanguageProps = {\n  currentLanguage: string\n  locale: string\n  setCurrentLanguage?: (language: string) => void\n}\nconst defaultLanguage: LanguageProps = {\n  currentLanguage: 'zh-tw',\n  locale: 'zh-tw',\n}\n\nconst LanguageContext = createContext<LanguageProps>(defaultLanguage)\n\nexport const LanguageProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const { enabledModules, settings } = useApp()\n  const [currentLanguage, setCurrentLanguage] = useState('zh-tw')\n  const [locale, setLocale] = useState('zh-tw')\n  dayjs.locale('zh-tw')\n\n  useEffect(() => {\n    const browserLanguage = settings['language'] || navigator.language.split('-')[0]\n    const cachedLanguage = localStorage.getItem('kolable.app.language')\n    setCurrentLanguage(\n      enabledModules.locale\n        ? typeof cachedLanguage === 'string' && supportedLanguages.includes(cachedLanguage)\n          ? cachedLanguage\n          : supportedLanguages.includes(browserLanguage)\n            ? browserLanguage\n            : 'zh-tw'\n        : 'zh-tw',\n    )\n  }, [enabledModules, settings])\n\n  useEffect(() => {\n    switch (currentLanguage) {\n      case 'zh-tw':\n      case 'acsi':\n        setLocale('zh-tw')\n        dayjs.locale('zh-tw')\n        break\n      default:\n        setLocale(currentLanguage)\n        dayjs.locale('zh-tw')\n    }\n  }, [currentLanguage])\n\n  let messages: any = {}\n  try {\n    if (enabledModules.locale) {\n      messages = require(`../translations/locales/${currentLanguage}.json`)\n    }\n  } catch {}\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        currentLanguage,\n        locale,\n        setCurrentLanguage: (newLanguage: string) => {\n          if (supportedLanguages.includes(newLanguage)) {\n            localStorage.setItem('kolable.app.language', newLanguage)\n            setCurrentLanguage(newLanguage)\n          }\n        },\n      }}\n    >\n      <IntlProvider defaultLocale=\"zh-tw\" locale={locale} messages={messages}>\n        {children}\n      </IntlProvider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport default LanguageContext\n"],"names":["supportedLanguages","defaultLanguage","LanguageContext","createContext","LanguageProvider","children","enabledModules","settings","useApp","currentLanguage","setCurrentLanguage","useState","locale","setLocale","dayjs","useEffect","browserLanguage","cachedLanguage","messages","jsx","newLanguage","IntlProvider"],"mappings":"4WASMA,EAAqB,CAAC,QAAS,QAAS,QAAS,KAAM,MAAM,EAO7DC,EAAiC,CACrC,gBAAiB,QACjB,OAAQ,OACV,EAEMC,EAAkBC,gBAA6BF,CAAe,EAEvDG,EAAsD,CAAC,CAAE,SAAAC,KAAe,CACnF,KAAM,CAAE,eAAAC,EAAgB,SAAAC,CAAS,EAAIC,SAAO,EACtC,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAAS,OAAO,EACxD,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAS,OAAO,EAC5CG,EAAA,QAAM,OAAO,OAAO,EAEpBC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAkBT,EAAS,UAAe,UAAU,SAAS,MAAM,GAAG,EAAE,CAAC,EACzEU,EAAiB,aAAa,QAAQ,sBAAsB,EAClEP,EACEJ,EAAe,OACX,OAAOW,GAAmB,UAAYjB,EAAmB,SAASiB,CAAc,EAC9EA,EACAjB,EAAmB,SAASgB,CAAe,EACzCA,EACA,QACJ,OACN,CAAA,EACC,CAACV,EAAgBC,CAAQ,CAAC,EAE7BQ,EAAAA,UAAU,IAAM,CACd,OAAQN,EAAiB,CACvB,IAAK,QACL,IAAK,OACHI,EAAU,OAAO,EACjBC,EAAA,QAAM,OAAO,OAAO,EACpB,MACF,QACED,EAAUJ,CAAe,EACzBK,EAAA,QAAM,OAAO,OAAO,CAAA,CACxB,EACC,CAACL,CAAe,CAAC,EAEpB,IAAIS,EAAgB,CAAC,EACjB,GAAA,CACEZ,EAAe,SACNY,EAAA,QAAQ,2BAA2BT,CAAe,OAAO,EACtE,MACM,CAAA,CAGN,OAAAU,EAAA,kBAAA,IAACjB,EAAgB,SAAhB,CACC,MAAO,CACL,gBAAAO,EACA,OAAAG,EACA,mBAAqBQ,GAAwB,CACvCpB,EAAmB,SAASoB,CAAW,IAC5B,aAAA,QAAQ,uBAAwBA,CAAW,EACxDV,EAAmBU,CAAW,EAChC,CAEJ,EAEA,iCAACC,EAAAA,aAAa,CAAA,cAAc,QAAQ,OAAAT,EAAgB,SAAAM,EACjD,SAAAb,CACH,CAAA,CAAA,CACF,CAEJ"}