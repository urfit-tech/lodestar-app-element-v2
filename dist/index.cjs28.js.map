{"version":3,"file":"index.cjs28.js","sources":["../../node_modules/@apollo/client/link/subscriptions/index.js"],"sourcesContent":["// This file is adapted from the graphql-ws npm package:\n// https://github.com/enisdenjo/graphql-ws\n//\n// Most of the file comes from that package's README; some other parts (such as\n// isLikeCloseEvent) come from its source.\n//\n// Here's the license of the original code:\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2020-2021 Denis Badurina\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { __assign, __extends } from \"tslib\";\nimport { print } from \"../../utilities/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\nimport { isNonNullObject, Observable } from \"../../utilities/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\n// https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close_event\nfunction isLikeCloseEvent(val) {\n    return isNonNullObject(val) && \"code\" in val && \"reason\" in val;\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/error_event\nfunction isLikeErrorEvent(err) {\n    var _a;\n    return isNonNullObject(err) && ((_a = err.target) === null || _a === void 0 ? void 0 : _a.readyState) === WebSocket.CLOSED;\n}\nvar GraphQLWsLink = /** @class */ (function (_super) {\n    __extends(GraphQLWsLink, _super);\n    function GraphQLWsLink(client) {\n        var _this = _super.call(this) || this;\n        _this.client = client;\n        return _this;\n    }\n    GraphQLWsLink.prototype.request = function (operation) {\n        var _this = this;\n        return new Observable(function (observer) {\n            return _this.client.subscribe(__assign(__assign({}, operation), { query: print(operation.query) }), {\n                next: observer.next.bind(observer),\n                complete: observer.complete.bind(observer),\n                error: function (err) {\n                    if (err instanceof Error) {\n                        return observer.error(err);\n                    }\n                    var likeClose = isLikeCloseEvent(err);\n                    if (likeClose || isLikeErrorEvent(err)) {\n                        return observer.error(\n                        // reason will be available on clean closes\n                        new Error(\"Socket closed\".concat(likeClose ? \" with event \".concat(err.code) : \"\").concat(likeClose ? \" \".concat(err.reason) : \"\")));\n                    }\n                    return observer.error(new ApolloError({\n                        graphQLErrors: Array.isArray(err) ? err : [err],\n                    }));\n                },\n                // casting around a wrong type in graphql-ws, which incorrectly expects `Sink<ExecutionResult>`\n            });\n        });\n    };\n    return GraphQLWsLink;\n}(ApolloLink));\nexport { GraphQLWsLink };\n//# sourceMappingURL=index.js.map"],"names":["isLikeCloseEvent","val","isNonNullObject","isLikeErrorEvent","err","_a","GraphQLWsLink","_super","__extends","client","_this","operation","Observable","observer","__assign","print","likeClose","ApolloError","ApolloLink"],"mappings":"4SAmCA,SAASA,EAAiBC,EAAK,CAC3B,OAAOC,EAAAA,gBAAgBD,CAAG,GAAK,SAAUA,GAAO,WAAYA,CAChE,CAEA,SAASE,EAAiBC,EAAK,CAC3B,IAAIC,EACJ,OAAOH,EAAAA,gBAAgBE,CAAG,KAAOC,EAAKD,EAAI,UAAY,MAAQC,IAAO,OAAS,OAASA,EAAG,cAAgB,UAAU,MACxH,CACG,IAACC,EAA+B,SAAUC,EAAQ,CACjDC,EAAS,UAACF,EAAeC,CAAM,EAC/B,SAASD,EAAcG,EAAQ,CAC3B,IAAIC,EAAQH,EAAO,KAAK,IAAI,GAAK,KACjC,OAAAG,EAAM,OAASD,EACRC,CACf,CACI,OAAAJ,EAAc,UAAU,QAAU,SAAUK,EAAW,CACnD,IAAID,EAAQ,KACZ,OAAO,IAAIE,EAAAA,WAAW,SAAUC,EAAU,CACtC,OAAOH,EAAM,OAAO,UAAUI,EAAQ,SAACA,EAAQ,SAAC,CAAE,EAAEH,CAAS,EAAG,CAAE,MAAOI,EAAK,MAACJ,EAAU,KAAK,CAAG,CAAA,EAAG,CAChG,KAAME,EAAS,KAAK,KAAKA,CAAQ,EACjC,SAAUA,EAAS,SAAS,KAAKA,CAAQ,EACzC,MAAO,SAAUT,EAAK,CAClB,GAAIA,aAAe,MACf,OAAOS,EAAS,MAAMT,CAAG,EAE7B,IAAIY,EAAYhB,EAAiBI,CAAG,EACpC,OAAIY,GAAab,EAAiBC,CAAG,EAC1BS,EAAS,MAEhB,IAAI,MAAM,gBAAgB,OAAOG,EAAY,eAAe,OAAOZ,EAAI,IAAI,EAAI,EAAE,EAAE,OAAOY,EAAY,IAAI,OAAOZ,EAAI,MAAM,EAAI,EAAE,CAAC,CAAC,EAEhIS,EAAS,MAAM,IAAII,cAAY,CAClC,cAAe,MAAM,QAAQb,CAAG,EAAIA,EAAM,CAACA,CAAG,CACtE,CAAqB,CAAC,CACL,CAEjB,CAAa,CACb,CAAS,CACJ,EACME,CACX,EAAEY,YAAU","x_google_ignoreList":[0]}