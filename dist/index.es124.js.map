{"version":3,"file":"index.es124.js","sources":["../../node_modules/@wry/caches/lib/weak.js"],"sourcesContent":["function noop() { }\nconst defaultDispose = noop;\nconst _WeakRef = typeof WeakRef !== \"undefined\"\n    ? WeakRef\n    : function (value) {\n        return { deref: () => value };\n    };\nconst _WeakMap = typeof WeakMap !== \"undefined\" ? WeakMap : Map;\nconst _FinalizationRegistry = typeof FinalizationRegistry !== \"undefined\"\n    ? FinalizationRegistry\n    : function () {\n        return {\n            register: noop,\n            unregister: noop,\n        };\n    };\nconst finalizationBatchSize = 10024;\nexport class WeakCache {\n    constructor(max = Infinity, dispose = defaultDispose) {\n        this.max = max;\n        this.dispose = dispose;\n        this.map = new _WeakMap();\n        this.newest = null;\n        this.oldest = null;\n        this.unfinalizedNodes = new Set();\n        this.finalizationScheduled = false;\n        this.size = 0;\n        this.finalize = () => {\n            const iterator = this.unfinalizedNodes.values();\n            for (let i = 0; i < finalizationBatchSize; i++) {\n                const node = iterator.next().value;\n                if (!node)\n                    break;\n                this.unfinalizedNodes.delete(node);\n                const key = node.key;\n                delete node.key;\n                node.keyRef = new _WeakRef(key);\n                this.registry.register(key, node, node);\n            }\n            if (this.unfinalizedNodes.size > 0) {\n                queueMicrotask(this.finalize);\n            }\n            else {\n                this.finalizationScheduled = false;\n            }\n        };\n        this.registry = new _FinalizationRegistry(this.deleteNode.bind(this));\n    }\n    has(key) {\n        return this.map.has(key);\n    }\n    get(key) {\n        const node = this.getNode(key);\n        return node && node.value;\n    }\n    getNode(key) {\n        const node = this.map.get(key);\n        if (node && node !== this.newest) {\n            const { older, newer } = node;\n            if (newer) {\n                newer.older = older;\n            }\n            if (older) {\n                older.newer = newer;\n            }\n            node.older = this.newest;\n            node.older.newer = node;\n            node.newer = null;\n            this.newest = node;\n            if (node === this.oldest) {\n                this.oldest = newer;\n            }\n        }\n        return node;\n    }\n    set(key, value) {\n        let node = this.getNode(key);\n        if (node) {\n            return (node.value = value);\n        }\n        node = {\n            key,\n            value,\n            newer: null,\n            older: this.newest,\n        };\n        if (this.newest) {\n            this.newest.newer = node;\n        }\n        this.newest = node;\n        this.oldest = this.oldest || node;\n        this.scheduleFinalization(node);\n        this.map.set(key, node);\n        this.size++;\n        return node.value;\n    }\n    clean() {\n        while (this.oldest && this.size > this.max) {\n            this.deleteNode(this.oldest);\n        }\n    }\n    deleteNode(node) {\n        if (node === this.newest) {\n            this.newest = node.older;\n        }\n        if (node === this.oldest) {\n            this.oldest = node.newer;\n        }\n        if (node.newer) {\n            node.newer.older = node.older;\n        }\n        if (node.older) {\n            node.older.newer = node.newer;\n        }\n        this.size--;\n        const key = node.key || (node.keyRef && node.keyRef.deref());\n        this.dispose(node.value, key);\n        if (!node.keyRef) {\n            this.unfinalizedNodes.delete(node);\n        }\n        else {\n            this.registry.unregister(node);\n        }\n        if (key)\n            this.map.delete(key);\n    }\n    delete(key) {\n        const node = this.map.get(key);\n        if (node) {\n            this.deleteNode(node);\n            return true;\n        }\n        return false;\n    }\n    scheduleFinalization(node) {\n        this.unfinalizedNodes.add(node);\n        if (!this.finalizationScheduled) {\n            this.finalizationScheduled = true;\n            queueMicrotask(this.finalize);\n        }\n    }\n}\n//# sourceMappingURL=weak.js.map"],"names":["noop","defaultDispose","_WeakRef","value","_WeakMap","_FinalizationRegistry","finalizationBatchSize","WeakCache","max","dispose","iterator","i","node","key","older","newer"],"mappings":"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","x_google_ignoreList":[0]}