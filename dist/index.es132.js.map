{"version":3,"file":"index.es132.js","sources":["../../node_modules/@apollo/client/link/core/ApolloLink.js"],"sourcesContent":["import { newInvariantError, invariant } from \"../../utilities/globals/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport { validateOperation, createOperation, transformOperation, } from \"../utils/index.js\";\nfunction passthrough(op, forward) {\n    return (forward ? forward(op) : Observable.of());\n}\nfunction toLink(handler) {\n    return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.empty = function () {\n        return new ApolloLink(function () { return Observable.of(); });\n    };\n    ApolloLink.from = function (links) {\n        if (links.length === 0)\n            return ApolloLink.empty();\n        return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n    };\n    ApolloLink.split = function (test, left, right) {\n        var leftLink = toLink(left);\n        var rightLink = toLink(right || new ApolloLink(passthrough));\n        var ret;\n        if (isTerminating(leftLink) && isTerminating(rightLink)) {\n            ret = new ApolloLink(function (operation) {\n                return test(operation) ?\n                    leftLink.request(operation) || Observable.of()\n                    : rightLink.request(operation) || Observable.of();\n            });\n        }\n        else {\n            ret = new ApolloLink(function (operation, forward) {\n                return test(operation) ?\n                    leftLink.request(operation, forward) || Observable.of()\n                    : rightLink.request(operation, forward) || Observable.of();\n            });\n        }\n        return Object.assign(ret, { left: leftLink, right: rightLink });\n    };\n    ApolloLink.execute = function (link, operation) {\n        return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n    };\n    ApolloLink.concat = function (first, second) {\n        var firstLink = toLink(first);\n        if (isTerminating(firstLink)) {\n            globalThis.__DEV__ !== false && invariant.warn(35, firstLink);\n            return firstLink;\n        }\n        var nextLink = toLink(second);\n        var ret;\n        if (isTerminating(nextLink)) {\n            ret = new ApolloLink(function (operation) {\n                return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n            });\n        }\n        else {\n            ret = new ApolloLink(function (operation, forward) {\n                return (firstLink.request(operation, function (op) {\n                    return nextLink.request(op, forward) || Observable.of();\n                }) || Observable.of());\n            });\n        }\n        return Object.assign(ret, { left: firstLink, right: nextLink });\n    };\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return ApolloLink.concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw newInvariantError(36);\n    };\n    ApolloLink.prototype.onError = function (error, observer) {\n        if (observer && observer.error) {\n            observer.error(error);\n            // Returning false indicates that observer.error does not need to be\n            // called again, since it was already called (on the previous line).\n            // Calling observer.error again would not cause any real problems,\n            // since only the first call matters, but custom onError functions\n            // might have other reasons for wanting to prevent the default\n            // behavior by returning false.\n            return false;\n        }\n        // Throw errors will be passed to observer.error.\n        throw error;\n    };\n    ApolloLink.prototype.setOnError = function (fn) {\n        this.onError = fn;\n        return this;\n    };\n    return ApolloLink;\n}());\nexport { ApolloLink };\n//# sourceMappingURL=ApolloLink.js.map"],"names":["passthrough","op","forward","Observable","toLink","handler","ApolloLink","isTerminating","link","request","links","x","y","test","left","right","leftLink","rightLink","ret","operation","createOperation","transformOperation","validateOperation","first","second","firstLink","invariant","nextLink","next","newInvariantError","error","observer","fn"],"mappings":"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","x_google_ignoreList":[0]}