{"version":3,"file":"index.es306.js","sources":["../../node_modules/@apollo/client/link/http/iterators/nodeStream.js"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function nodeStreamIterator(stream) {\n    var cleanup = null;\n    var error = null;\n    var done = false;\n    var data = [];\n    var waiting = [];\n    function onData(chunk) {\n        if (error)\n            return;\n        if (waiting.length) {\n            var shiftedArr = waiting.shift();\n            if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n                return shiftedArr[0]({ value: chunk, done: false });\n            }\n        }\n        data.push(chunk);\n    }\n    function onError(err) {\n        error = err;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[1](err);\n        });\n        !cleanup || cleanup();\n    }\n    function onEnd() {\n        done = true;\n        var all = waiting.slice();\n        all.forEach(function (pair) {\n            pair[0]({ value: undefined, done: true });\n        });\n        !cleanup || cleanup();\n    }\n    cleanup = function () {\n        cleanup = null;\n        stream.removeListener(\"data\", onData);\n        stream.removeListener(\"error\", onError);\n        stream.removeListener(\"end\", onEnd);\n        stream.removeListener(\"finish\", onEnd);\n        stream.removeListener(\"close\", onEnd);\n    };\n    stream.on(\"data\", onData);\n    stream.on(\"error\", onError);\n    stream.on(\"end\", onEnd);\n    stream.on(\"finish\", onEnd);\n    stream.on(\"close\", onEnd);\n    function getNext() {\n        return new Promise(function (resolve, reject) {\n            if (error)\n                return reject(error);\n            if (data.length)\n                return resolve({ value: data.shift(), done: false });\n            if (done)\n                return resolve({ value: undefined, done: true });\n            waiting.push([resolve, reject]);\n        });\n    }\n    var iterator = {\n        next: function () {\n            return getNext();\n        },\n    };\n    if (canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function () {\n            return this;\n        };\n    }\n    return iterator;\n}\n//# sourceMappingURL=nodeStream.js.map"],"names":["nodeStreamIterator","stream","cleanup","error","done","data","waiting","onData","chunk","shiftedArr","onError","err","all","pair","onEnd","getNext","resolve","reject","iterator","canUseAsyncIteratorSymbol"],"mappings":";AAKe,SAASA,EAAmBC,GAAQ;AAC/C,MAAIC,IAAU,MACVC,IAAQ,MACRC,IAAO,IACPC,IAAO,CAAE,GACTC,IAAU,CAAE;AAChB,WAASC,EAAOC,GAAO;AACnB,QAAI,CAAAL,GAEJ;AAAA,UAAIG,EAAQ,QAAQ;AAChB,YAAIG,IAAaH,EAAQ,MAAO;AAChC,YAAI,MAAM,QAAQG,CAAU,KAAKA,EAAW,CAAC;AACzC,iBAAOA,EAAW,CAAC,EAAE,EAAE,OAAOD,GAAO,MAAM,IAAO;AAAA,MAElE;AACQ,MAAAH,EAAK,KAAKG,CAAK;AAAA;AAAA,EACvB;AACI,WAASE,EAAQC,GAAK;AAClB,IAAAR,IAAQQ;AACR,QAAIC,IAAMN,EAAQ,MAAO;AACzB,IAAAM,EAAI,QAAQ,SAAUC,GAAM;AACxB,MAAAA,EAAK,CAAC,EAAEF,CAAG;AAAA,IACvB,CAAS,GACD,CAACT,KAAWA,EAAS;AAAA,EAC7B;AACI,WAASY,IAAQ;AACb,IAAAV,IAAO;AACP,QAAIQ,IAAMN,EAAQ,MAAO;AACzB,IAAAM,EAAI,QAAQ,SAAUC,GAAM;AACxB,MAAAA,EAAK,CAAC,EAAE,EAAE,OAAO,QAAW,MAAM,IAAM;AAAA,IACpD,CAAS,GACD,CAACX,KAAWA,EAAS;AAAA,EAC7B;AACI,EAAAA,IAAU,WAAY;AAClB,IAAAA,IAAU,MACVD,EAAO,eAAe,QAAQM,CAAM,GACpCN,EAAO,eAAe,SAASS,CAAO,GACtCT,EAAO,eAAe,OAAOa,CAAK,GAClCb,EAAO,eAAe,UAAUa,CAAK,GACrCb,EAAO,eAAe,SAASa,CAAK;AAAA,EACvC,GACDb,EAAO,GAAG,QAAQM,CAAM,GACxBN,EAAO,GAAG,SAASS,CAAO,GAC1BT,EAAO,GAAG,OAAOa,CAAK,GACtBb,EAAO,GAAG,UAAUa,CAAK,GACzBb,EAAO,GAAG,SAASa,CAAK;AACxB,WAASC,IAAU;AACf,WAAO,IAAI,QAAQ,SAAUC,GAASC,GAAQ;AAC1C,UAAId;AACA,eAAOc,EAAOd,CAAK;AACvB,UAAIE,EAAK;AACL,eAAOW,EAAQ,EAAE,OAAOX,EAAK,SAAS,MAAM,IAAO;AACvD,UAAID;AACA,eAAOY,EAAQ,EAAE,OAAO,QAAW,MAAM,GAAI,CAAE;AACnD,MAAAV,EAAQ,KAAK,CAACU,GAASC,CAAM,CAAC;AAAA,IAC1C,CAAS;AAAA,EACT;AACI,MAAIC,IAAW;AAAA,IACX,MAAM,WAAY;AACd,aAAOH,EAAS;AAAA,IACnB;AAAA,EACJ;AACD,SAAII,MACAD,EAAS,OAAO,aAAa,IAAI,WAAY;AACzC,WAAO;AAAA,EACV,IAEEA;AACX;","x_google_ignoreList":[0]}