{"version":3,"file":"index.cjs136.js","sources":["../node_modules/axios/lib/core/dispatchRequest.js"],"sourcesContent":["'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n"],"names":["throwIfCancellationRequested","config","CanceledError","dispatchRequest","AxiosHeaders","transformData","adapters","defaults","response","reason","isCancel"],"mappings":"wSAgBA,SAASA,EAA6BC,EAAQ,CAK5C,GAJIA,EAAO,aACTA,EAAO,YAAY,iBAAkB,EAGnCA,EAAO,QAAUA,EAAO,OAAO,QACjC,MAAM,IAAIC,EAAAA,QAAc,KAAMD,CAAM,CAExC,CASe,SAASE,EAAgBF,EAAQ,CAC9C,OAAAD,EAA6BC,CAAM,EAEnCA,EAAO,QAAUG,EAAAA,QAAa,KAAKH,EAAO,OAAO,EAGjDA,EAAO,KAAOI,EAAAA,QAAc,KAC1BJ,EACAA,EAAO,gBACR,EAEG,CAAC,OAAQ,MAAO,OAAO,EAAE,QAAQA,EAAO,MAAM,IAAM,IACtDA,EAAO,QAAQ,eAAe,oCAAqC,EAAK,EAG1DK,EAAAA,QAAS,WAAWL,EAAO,SAAWM,EAAQ,QAAC,OAAO,EAEvDN,CAAM,EAAE,KAAK,SAA6BO,EAAU,CACjE,OAAAR,EAA6BC,CAAM,EAGnCO,EAAS,KAAOH,EAAAA,QAAc,KAC5BJ,EACAA,EAAO,kBACPO,CACD,EAEDA,EAAS,QAAUJ,EAAAA,QAAa,KAAKI,EAAS,OAAO,EAE9CA,CACX,EAAK,SAA4BC,EAAQ,CACrC,OAAKC,EAAAA,QAASD,CAAM,IAClBT,EAA6BC,CAAM,EAG/BQ,GAAUA,EAAO,WACnBA,EAAO,SAAS,KAAOJ,EAAAA,QAAc,KACnCJ,EACAA,EAAO,kBACPQ,EAAO,QACR,EACDA,EAAO,SAAS,QAAUL,EAAAA,QAAa,KAAKK,EAAO,SAAS,OAAO,IAIhE,QAAQ,OAAOA,CAAM,CAChC,CAAG,CACH","x_google_ignoreList":[0]}