{"version":3,"file":"index.es130.js","sources":["../node_modules/filter-obj/index.js"],"sourcesContent":["export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n"],"names":["includeKeys","object","predicate","result","key","descriptor","value"],"mappings":"AAAO,SAASA,EAAYC,GAAQC,GAAW;AAC9C,QAAMC,IAAS,CAAE;AAEjB,MAAI,MAAM,QAAQD,CAAS;AAC1B,eAAWE,KAAOF,GAAW;AAC5B,YAAMG,IAAa,OAAO,yBAAyBJ,GAAQG,CAAG;AAC9D,MAAIC,GAAY,cACf,OAAO,eAAeF,GAAQC,GAAKC,CAAU;AAAA,IAEjD;AAAA;AAGE,eAAWD,KAAO,QAAQ,QAAQH,CAAM,GAAG;AAC1C,YAAMI,IAAa,OAAO,yBAAyBJ,GAAQG,CAAG;AAC9D,UAAIC,EAAW,YAAY;AAC1B,cAAMC,IAAQL,EAAOG,CAAG;AACxB,QAAIF,EAAUE,GAAKE,GAAOL,CAAM,KAC/B,OAAO,eAAeE,GAAQC,GAAKC,CAAU;AAAA,MAElD;AAAA,IACA;AAGC,SAAOF;AACR;","x_google_ignoreList":[0]}