{"version":3,"file":"index.es36.js","sources":["../../node_modules/@apollo/client/utilities/graphql/getFromAST.js"],"sourcesContent":["import { invariant, newInvariantError } from \"../globals/index.js\";\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n    invariant(doc && doc.kind === \"Document\", 76);\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== \"FragmentDefinition\"; })\n        .map(function (definition) {\n        if (definition.kind !== \"OperationDefinition\") {\n            throw newInvariantError(77, definition.kind);\n        }\n        return definition;\n    });\n    invariant(operations.length <= 1, 78, operations.length);\n    return doc;\n}\nexport function getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"OperationDefinition\";\n    })[0];\n}\nexport function getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === \"OperationDefinition\" && !!definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) {\n        return definition.kind === \"FragmentDefinition\";\n    });\n}\nexport function getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    invariant(queryDef && queryDef.operation === \"query\", 79);\n    return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n    invariant(doc.kind === \"Document\", 80);\n    invariant(doc.definitions.length <= 1, 81);\n    var fragmentDef = doc.definitions[0];\n    invariant(fragmentDef.kind === \"FragmentDefinition\", 82);\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === \"OperationDefinition\") {\n            var operation = definition.operation;\n            if (operation === \"query\" ||\n                operation === \"mutation\" ||\n                operation === \"subscription\") {\n                return definition;\n            }\n        }\n        if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw newInvariantError(83);\n}\nexport function getDefaultValues(definition) {\n    var defaultValues = Object.create(null);\n    var defs = definition && definition.variableDefinitions;\n    if (defs && defs.length) {\n        defs.forEach(function (def) {\n            if (def.defaultValue) {\n                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\n            }\n        });\n    }\n    return defaultValues;\n}\n//# sourceMappingURL=getFromAST.js.map"],"names":["checkDocument","doc","invariant","operations","d","definition","newInvariantError","getOperationDefinition","getOperationName","x","getFragmentDefinitions","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","_i","_a","operation","getDefaultValues","defaultValues","defs","def","valueToObjectRepresentation"],"mappings":";;;AAGO,SAASA,EAAcC,GAAK;AAC/B,EAAAC,EAAUD,KAAOA,EAAI,SAAS,YAAY,EAAE;AAC5C,MAAIE,IAAaF,EAAI,YAChB,OAAO,SAAUG,GAAG;AAAE,WAAOA,EAAE,SAAS;AAAA,EAAuB,CAAA,EAC/D,IAAI,SAAUC,GAAY;AAC3B,QAAIA,EAAW,SAAS;AACpB,YAAMC,EAAkB,IAAID,EAAW,IAAI;AAE/C,WAAOA;AAAA,EACf,CAAK;AACD,SAAAH,EAAUC,EAAW,UAAU,GAAG,IAAIA,EAAW,MAAM,GAChDF;AACX;AACO,SAASM,EAAuBN,GAAK;AACxC,SAAAD,EAAcC,CAAG,GACVA,EAAI,YAAY,OAAO,SAAUI,GAAY;AAChD,WAAOA,EAAW,SAAS;AAAA,EAC9B,CAAA,EAAE,CAAC;AACR;AACO,SAASG,EAAiBP,GAAK;AAClC,SAAQA,EAAI,YACP,OAAO,SAAUI,GAAY;AAC9B,WAAOA,EAAW,SAAS,yBAAyB,CAAC,CAACA,EAAW;AAAA,EACpE,CAAA,EACI,IAAI,SAAUI,GAAG;AAAE,WAAOA,EAAE,KAAK;AAAA,EAAQ,CAAA,EAAE,CAAC,KAAK;AAC1D;AAEO,SAASC,EAAuBT,GAAK;AACxC,SAAOA,EAAI,YAAY,OAAO,SAAUI,GAAY;AAChD,WAAOA,EAAW,SAAS;AAAA,EACnC,CAAK;AACL;AACO,SAASM,EAAmBV,GAAK;AACpC,MAAIW,IAAWL,EAAuBN,CAAG;AACzC,SAAAC,EAAUU,KAAYA,EAAS,cAAc,SAAS,EAAE,GACjDA;AACX;AACO,SAASC,EAAsBZ,GAAK;AACvC,EAAAC,EAAUD,EAAI,SAAS,YAAY,EAAE,GACrCC,EAAUD,EAAI,YAAY,UAAU,GAAG,EAAE;AACzC,MAAIa,IAAcb,EAAI,YAAY,CAAC;AACnC,SAAAC,EAAUY,EAAY,SAAS,sBAAsB,EAAE,GAChDA;AACX;AAMO,SAASC,EAAkBC,GAAU;AACxC,EAAAhB,EAAcgB,CAAQ;AAEtB,WADIC,GACKC,IAAK,GAAGC,IAAKH,EAAS,aAAaE,IAAKC,EAAG,QAAQD,KAAM;AAC9D,QAAIb,IAAac,EAAGD,CAAE;AACtB,QAAIb,EAAW,SAAS,uBAAuB;AAC3C,UAAIe,IAAYf,EAAW;AAC3B,UAAIe,MAAc,WACdA,MAAc,cACdA,MAAc;AACd,eAAOf;AAAA,IAEvB;AACQ,IAAIA,EAAW,SAAS,wBAAwB,CAACY,MAG7CA,IAAqBZ;AAAA,EAEjC;AACI,MAAIY;AACA,WAAOA;AAEX,QAAMX,EAAkB,EAAE;AAC9B;AACO,SAASe,EAAiBhB,GAAY;AACzC,MAAIiB,IAAgB,uBAAO,OAAO,IAAI,GAClCC,IAAOlB,KAAcA,EAAW;AACpC,SAAIkB,KAAQA,EAAK,UACbA,EAAK,QAAQ,SAAUC,GAAK;AACxB,IAAIA,EAAI,gBACJC,EAA4BH,GAAeE,EAAI,SAAS,MAAMA,EAAI,YAAY;AAAA,EAE9F,CAAS,GAEEF;AACX;","x_google_ignoreList":[0]}