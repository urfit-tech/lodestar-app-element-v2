{"version":3,"file":"index.es119.js","sources":["../node_modules/axios/lib/core/dispatchRequest.js"],"sourcesContent":["'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n"],"names":["throwIfCancellationRequested","config","CanceledError","dispatchRequest","AxiosHeaders","transformData","adapters","defaults","response","reason","isCancel"],"mappings":";;;;;;AAgBA,SAASA,EAA6BC,GAAQ;AAK5C,MAJIA,EAAO,eACTA,EAAO,YAAY,iBAAkB,GAGnCA,EAAO,UAAUA,EAAO,OAAO;AACjC,UAAM,IAAIC,EAAc,MAAMD,CAAM;AAExC;AASe,SAASE,EAAgBF,GAAQ;AAC9C,SAAAD,EAA6BC,CAAM,GAEnCA,EAAO,UAAUG,EAAa,KAAKH,EAAO,OAAO,GAGjDA,EAAO,OAAOI,EAAc;AAAA,IAC1BJ;AAAA,IACAA,EAAO;AAAA,EACR,GAEG,CAAC,QAAQ,OAAO,OAAO,EAAE,QAAQA,EAAO,MAAM,MAAM,MACtDA,EAAO,QAAQ,eAAe,qCAAqC,EAAK,GAG1DK,EAAS,WAAWL,EAAO,WAAWM,EAAS,OAAO,EAEvDN,CAAM,EAAE,KAAK,SAA6BO,GAAU;AACjE,WAAAR,EAA6BC,CAAM,GAGnCO,EAAS,OAAOH,EAAc;AAAA,MAC5BJ;AAAA,MACAA,EAAO;AAAA,MACPO;AAAA,IACD,GAEDA,EAAS,UAAUJ,EAAa,KAAKI,EAAS,OAAO,GAE9CA;AAAA,EACX,GAAK,SAA4BC,GAAQ;AACrC,WAAKC,EAASD,CAAM,MAClBT,EAA6BC,CAAM,GAG/BQ,KAAUA,EAAO,aACnBA,EAAO,SAAS,OAAOJ,EAAc;AAAA,MACnCJ;AAAA,MACAA,EAAO;AAAA,MACPQ,EAAO;AAAA,IACR,GACDA,EAAO,SAAS,UAAUL,EAAa,KAAKK,EAAO,SAAS,OAAO,KAIhE,QAAQ,OAAOA,CAAM;AAAA,EAChC,CAAG;AACH;","x_google_ignoreList":[0]}