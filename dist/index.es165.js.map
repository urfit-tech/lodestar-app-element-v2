{"version":3,"file":"index.es165.js","sources":["../node_modules/jsonwebtoken/node_modules/semver/classes/comparator.js"],"sourcesContent":["const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n"],"names":["ANY","Comparator","comp","options","parseOptions","debug","r","re","t","m","SemVer","version","cmp","Range","comparator","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5"],"mappings":"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","x_google_ignoreList":[0]}