{"version":3,"file":"index.es123.js","sources":["../node_modules/axios/lib/helpers/toFormData.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n"],"names":["isVisitable","thing","utils","removeBrackets","key","renderKey","path","dots","token","i","isFlatArray","arr","predicates","prop","toFormData","obj","formData","options","option","source","metaTokens","visitor","defaultVisitor","indexes","useBlob","convertValue","value","AxiosError","el","index","stack","exposedHelpers","build"],"mappings":"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","x_google_ignoreList":[0]}