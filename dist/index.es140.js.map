{"version":3,"file":"index.es140.js","sources":["../node_modules/jsonwebtoken/node_modules/semver/classes/semver.js"],"sourcesContent":["const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, safeSrc: src, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const r = new RegExp(`^${this.options.loose ? src[t.PRERELEASELOOSE] : src[t.PRERELEASE]}$`)\n        const match = `-${identifier}`.match(r)\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n"],"names":["debug","require$$0","MAX_LENGTH","MAX_SAFE_INTEGER","require$$1","re","src","t","require$$2","parseOptions","require$$3","compareIdentifiers","require$$4","SemVer","version","options","m","id","num","other","i","a","b","release","identifier","identifierBase","r","match","base","prerelease","semver"],"mappings":";;;;;;;;;AAAA,QAAMA,IAAQC,EAAA,GACR,EAAE,YAAAC,GAAY,kBAAAC,EAAgB,IAAKC,EAAA,GACnC,EAAE,QAAQC,GAAI,SAASC,GAAK,GAAAC,EAAC,IAAKC,EAAA,GAElCC,IAAeC,EAAA,GACf,EAAE,oBAAAC,EAAkB,IAAKC,EAAA;AAAA,EAC/B,MAAMC,EAAO;AAAA,IACX,YAAaC,GAASC,GAAS;AAG7B,UAFAA,IAAUN,EAAaM,CAAO,GAE1BD,aAAmBD,GAAQ;AAC7B,YAAIC,EAAQ,UAAU,CAAC,CAACC,EAAQ,SAC9BD,EAAQ,sBAAsB,CAAC,CAACC,EAAQ;AACxC,iBAAOD;AAEP,QAAAA,IAAUA,EAAQ;AAAA,MAE1B,WAAe,OAAOA,KAAY;AAC5B,cAAM,IAAI,UAAU,gDAAgD,OAAOA,CAAO,IAAI;AAGxF,UAAIA,EAAQ,SAASZ;AACnB,cAAM,IAAI;AAAA,UACR,0BAA0BA,CAAU;AAAA,QAC5C;AAGI,MAAAF,EAAM,UAAUc,GAASC,CAAO,GAChC,KAAK,UAAUA,GACf,KAAK,QAAQ,CAAC,CAACA,EAAQ,OAGvB,KAAK,oBAAoB,CAAC,CAACA,EAAQ;AAEnC,YAAMC,IAAIF,EAAQ,KAAI,EAAG,MAAMC,EAAQ,QAAQV,EAAGE,EAAE,KAAK,IAAIF,EAAGE,EAAE,IAAI,CAAC;AAEvE,UAAI,CAACS;AACH,cAAM,IAAI,UAAU,oBAAoBF,CAAO,EAAE;AAUnD,UAPA,KAAK,MAAMA,GAGX,KAAK,QAAQ,CAACE,EAAE,CAAC,GACjB,KAAK,QAAQ,CAACA,EAAE,CAAC,GACjB,KAAK,QAAQ,CAACA,EAAE,CAAC,GAEb,KAAK,QAAQb,KAAoB,KAAK,QAAQ;AAChD,cAAM,IAAI,UAAU,uBAAuB;AAG7C,UAAI,KAAK,QAAQA,KAAoB,KAAK,QAAQ;AAChD,cAAM,IAAI,UAAU,uBAAuB;AAG7C,UAAI,KAAK,QAAQA,KAAoB,KAAK,QAAQ;AAChD,cAAM,IAAI,UAAU,uBAAuB;AAI7C,MAAKa,EAAE,CAAC,IAGN,KAAK,aAAaA,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,IAAI,CAACC,MAAO;AAC5C,YAAI,WAAW,KAAKA,CAAE,GAAG;AACvB,gBAAMC,IAAM,CAACD;AACb,cAAIC,KAAO,KAAKA,IAAMf;AACpB,mBAAOe;AAAA,QAEnB;AACQ,eAAOD;AAAA,MACR,CAAA,IAVD,KAAK,aAAa,CAAA,GAapB,KAAK,QAAQD,EAAE,CAAC,IAAIA,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA,GACtC,KAAK,OAAM;AAAA,IACf;AAAA,IAEE,SAAU;AACR,kBAAK,UAAU,GAAG,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IACpD,KAAK,WAAW,WAClB,KAAK,WAAW,IAAI,KAAK,WAAW,KAAK,GAAG,CAAC,KAExC,KAAK;AAAA,IAChB;AAAA,IAEE,WAAY;AACV,aAAO,KAAK;AAAA,IAChB;AAAA,IAEE,QAASG,GAAO;AAEd,UADAnB,EAAM,kBAAkB,KAAK,SAAS,KAAK,SAASmB,CAAK,GACrD,EAAEA,aAAiBN,IAAS;AAC9B,YAAI,OAAOM,KAAU,YAAYA,MAAU,KAAK;AAC9C,iBAAO;AAET,QAAAA,IAAQ,IAAIN,EAAOM,GAAO,KAAK,OAAO;AAAA,MAC5C;AAEI,aAAIA,EAAM,YAAY,KAAK,UAClB,IAGF,KAAK,YAAYA,CAAK,KAAK,KAAK,WAAWA,CAAK;AAAA,IAC3D;AAAA,IAEE,YAAaA,GAAO;AAClB,aAAMA,aAAiBN,MACrBM,IAAQ,IAAIN,EAAOM,GAAO,KAAK,OAAO,IAItCR,EAAmB,KAAK,OAAOQ,EAAM,KAAK,KAC1CR,EAAmB,KAAK,OAAOQ,EAAM,KAAK,KAC1CR,EAAmB,KAAK,OAAOQ,EAAM,KAAK;AAAA,IAEhD;AAAA,IAEE,WAAYA,GAAO;AAMjB,UALMA,aAAiBN,MACrBM,IAAQ,IAAIN,EAAOM,GAAO,KAAK,OAAO,IAIpC,KAAK,WAAW,UAAU,CAACA,EAAM,WAAW;AAC9C,eAAO;AACF,UAAI,CAAC,KAAK,WAAW,UAAUA,EAAM,WAAW;AACrD,eAAO;AACF,UAAI,CAAC,KAAK,WAAW,UAAU,CAACA,EAAM,WAAW;AACtD,eAAO;AAGT,UAAIC,IAAI;AACR,SAAG;AACD,cAAMC,IAAI,KAAK,WAAWD,CAAC,GACrBE,IAAIH,EAAM,WAAWC,CAAC;AAE5B,YADApB,EAAM,sBAAsBoB,GAAGC,GAAGC,CAAC,GAC/BD,MAAM,UAAaC,MAAM;AAC3B,iBAAO;AACF,YAAIA,MAAM;AACf,iBAAO;AACF,YAAID,MAAM;AACf,iBAAO;AACF,YAAIA,MAAMC;AACf;AAEA,eAAOX,EAAmBU,GAAGC,CAAC;AAAA,MAEjC,SAAQ,EAAEF;AAAA,IACf;AAAA,IAEE,aAAcD,GAAO;AACnB,MAAMA,aAAiBN,MACrBM,IAAQ,IAAIN,EAAOM,GAAO,KAAK,OAAO;AAGxC,UAAIC,IAAI;AACR,SAAG;AACD,cAAMC,IAAI,KAAK,MAAMD,CAAC,GAChBE,IAAIH,EAAM,MAAMC,CAAC;AAEvB,YADApB,EAAM,iBAAiBoB,GAAGC,GAAGC,CAAC,GAC1BD,MAAM,UAAaC,MAAM;AAC3B,iBAAO;AACF,YAAIA,MAAM;AACf,iBAAO;AACF,YAAID,MAAM;AACf,iBAAO;AACF,YAAIA,MAAMC;AACf;AAEA,eAAOX,EAAmBU,GAAGC,CAAC;AAAA,MAEjC,SAAQ,EAAEF;AAAA,IACf;AAAA;AAAA;AAAA,IAIE,IAAKG,GAASC,GAAYC,GAAgB;AACxC,UAAIF,EAAQ,WAAW,KAAK,GAAG;AAC7B,YAAI,CAACC,KAAcC,MAAmB;AACpC,gBAAM,IAAI,MAAM,iDAAiD;AAGnE,YAAID,GAAY;AACd,gBAAME,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,QAAQpB,EAAIC,EAAE,eAAe,IAAID,EAAIC,EAAE,UAAU,CAAC,GAAG,GACrFoB,IAAQ,IAAIH,CAAU,GAAG,MAAME,CAAC;AACtC,cAAI,CAACC,KAASA,EAAM,CAAC,MAAMH;AACzB,kBAAM,IAAI,MAAM,uBAAuBA,CAAU,EAAE;AAAA,QAE7D;AAAA,MACA;AAEI,cAAQD,GAAO;AAAA,QACb,KAAK;AACH,eAAK,WAAW,SAAS,GACzB,KAAK,QAAQ,GACb,KAAK,QAAQ,GACb,KAAK,SACL,KAAK,IAAI,OAAOC,GAAYC,CAAc;AAC1C;AAAA,QACF,KAAK;AACH,eAAK,WAAW,SAAS,GACzB,KAAK,QAAQ,GACb,KAAK,SACL,KAAK,IAAI,OAAOD,GAAYC,CAAc;AAC1C;AAAA,QACF,KAAK;AAIH,eAAK,WAAW,SAAS,GACzB,KAAK,IAAI,SAASD,GAAYC,CAAc,GAC5C,KAAK,IAAI,OAAOD,GAAYC,CAAc;AAC1C;AAAA;AAAA;AAAA,QAGF,KAAK;AACH,UAAI,KAAK,WAAW,WAAW,KAC7B,KAAK,IAAI,SAASD,GAAYC,CAAc,GAE9C,KAAK,IAAI,OAAOD,GAAYC,CAAc;AAC1C;AAAA,QACF,KAAK;AACH,cAAI,KAAK,WAAW,WAAW;AAC7B,kBAAM,IAAI,MAAM,WAAW,KAAK,GAAG,sBAAsB;AAE3D,eAAK,WAAW,SAAS;AACzB;AAAA,QAEF,KAAK;AAKH,WACE,KAAK,UAAU,KACf,KAAK,UAAU,KACf,KAAK,WAAW,WAAW,MAE3B,KAAK,SAEP,KAAK,QAAQ,GACb,KAAK,QAAQ,GACb,KAAK,aAAa,CAAA;AAClB;AAAA,QACF,KAAK;AAKH,WAAI,KAAK,UAAU,KAAK,KAAK,WAAW,WAAW,MACjD,KAAK,SAEP,KAAK,QAAQ,GACb,KAAK,aAAa,CAAA;AAClB;AAAA,QACF,KAAK;AAKH,UAAI,KAAK,WAAW,WAAW,KAC7B,KAAK,SAEP,KAAK,aAAa,CAAA;AAClB;AAAA;AAAA;AAAA,QAGF,KAAK,OAAO;AACV,gBAAMG,IAAO,OAAOH,CAAc,IAAI,IAAI;AAE1C,cAAI,KAAK,WAAW,WAAW;AAC7B,iBAAK,aAAa,CAACG,CAAI;AAAA,eAClB;AACL,gBAAI,IAAI,KAAK,WAAW;AACxB,mBAAO,EAAE,KAAK;AACZ,cAAI,OAAO,KAAK,WAAW,CAAC,KAAM,aAChC,KAAK,WAAW,CAAC,KACjB,IAAI;AAGR,gBAAI,MAAM,IAAI;AAEZ,kBAAIJ,MAAe,KAAK,WAAW,KAAK,GAAG,KAAKC,MAAmB;AACjE,sBAAM,IAAI,MAAM,uDAAuD;AAEzE,mBAAK,WAAW,KAAKG,CAAI;AAAA,YACrC;AAAA,UACA;AACQ,cAAIJ,GAAY;AAGd,gBAAIK,IAAa,CAACL,GAAYI,CAAI;AAClC,YAAIH,MAAmB,OACrBI,IAAa,CAACL,CAAU,IAEtBb,EAAmB,KAAK,WAAW,CAAC,GAAGa,CAAU,MAAM,IACrD,MAAM,KAAK,WAAW,CAAC,CAAC,MAC1B,KAAK,aAAaK,KAGpB,KAAK,aAAaA;AAAA,UAE9B;AACQ;AAAA,QACR;AAAA,QACM;AACE,gBAAM,IAAI,MAAM,+BAA+BN,CAAO,EAAE;AAAA,MAChE;AACI,kBAAK,MAAM,KAAK,OAAM,GAClB,KAAK,MAAM,WACb,KAAK,OAAO,IAAI,KAAK,MAAM,KAAK,GAAG,CAAC,KAE/B;AAAA,IACX;AAAA,EACA;AAEA,SAAAO,IAAiBjB;;","x_google_ignoreList":[0]}