{"version":3,"file":"index.es189.js","sources":["../../node_modules/optimism/node_modules/@wry/trie/lib/index.js"],"sourcesContent":["// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\nconst { hasOwnProperty } = Object.prototype;\nexport class Trie {\n    constructor(weakness = true, makeData = defaultMakeData) {\n        this.weakness = weakness;\n        this.makeData = makeData;\n    }\n    lookup(...array) {\n        return this.lookupArray(array);\n    }\n    lookupArray(array) {\n        let node = this;\n        forEach.call(array, key => node = node.getChildTrie(key));\n        return hasOwnProperty.call(node, \"data\")\n            ? node.data\n            : node.data = this.makeData(slice.call(array));\n    }\n    peek(...array) {\n        return this.peekArray(array);\n    }\n    peekArray(array) {\n        let node = this;\n        for (let i = 0, len = array.length; node && i < len; ++i) {\n            const map = this.weakness && isObjRef(array[i]) ? node.weak : node.strong;\n            node = map && map.get(array[i]);\n        }\n        return node && node.data;\n    }\n    getChildTrie(key) {\n        const map = this.weakness && isObjRef(key)\n            ? this.weak || (this.weak = new WeakMap())\n            : this.strong || (this.strong = new Map());\n        let child = map.get(key);\n        if (!child)\n            map.set(key, child = new Trie(this.weakness, this.makeData));\n        return child;\n    }\n}\nfunction isObjRef(value) {\n    switch (typeof value) {\n        case \"object\":\n            if (value === null)\n                break;\n        // Fall through to return true...\n        case \"function\":\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=index.js.map"],"names":["defaultMakeData","forEach","slice","hasOwnProperty","Trie","weakness","makeData","array","node","key","i","len","map","isObjRef","child","value"],"mappings":"AAKA,MAAMA,IAAkB,MAAM,uBAAO,OAAO,IAAI,GAE1C,EAAE,SAAAC,GAAS,OAAAC,MAAU,MAAM,WAC3B,EAAE,gBAAAC,EAAc,IAAK,OAAO;AAC3B,MAAMC,EAAK;AAAA,EACd,YAAYC,IAAW,IAAMC,IAAWN,GAAiB;AACrD,SAAK,WAAWK,GAChB,KAAK,WAAWC;AAAA,EACxB;AAAA,EACI,UAAUC,GAAO;AACb,WAAO,KAAK,YAAYA,CAAK;AAAA,EACrC;AAAA,EACI,YAAYA,GAAO;AACf,QAAIC,IAAO;AACX,WAAAP,EAAQ,KAAKM,GAAO,CAAAE,MAAOD,IAAOA,EAAK,aAAaC,CAAG,CAAC,GACjDN,EAAe,KAAKK,GAAM,MAAM,IACjCA,EAAK,OACLA,EAAK,OAAO,KAAK,SAASN,EAAM,KAAKK,CAAK,CAAC;AAAA,EACzD;AAAA,EACI,QAAQA,GAAO;AACX,WAAO,KAAK,UAAUA,CAAK;AAAA,EACnC;AAAA,EACI,UAAUA,GAAO;AACb,QAAIC,IAAO;AACX,aAASE,IAAI,GAAGC,IAAMJ,EAAM,QAAQC,KAAQE,IAAIC,GAAK,EAAED,GAAG;AACtD,YAAME,IAAM,KAAK,YAAYC,EAASN,EAAMG,CAAC,CAAC,IAAIF,EAAK,OAAOA,EAAK;AACnE,MAAAA,IAAOI,KAAOA,EAAI,IAAIL,EAAMG,CAAC,CAAC;AAAA,IAC1C;AACQ,WAAOF,KAAQA,EAAK;AAAA,EAC5B;AAAA,EACI,aAAaC,GAAK;AACd,UAAMG,IAAM,KAAK,YAAYC,EAASJ,CAAG,IACnC,KAAK,SAAS,KAAK,OAAO,oBAAI,QAAS,KACvC,KAAK,WAAW,KAAK,SAAS,oBAAI,IAAG;AAC3C,QAAIK,IAAQF,EAAI,IAAIH,CAAG;AACvB,WAAKK,KACDF,EAAI,IAAIH,GAAKK,IAAQ,IAAIV,EAAK,KAAK,UAAU,KAAK,QAAQ,CAAC,GACxDU;AAAA,EACf;AACA;AACA,SAASD,EAASE,GAAO;AACrB,UAAQ,OAAOA,GAAK;AAAA,IAChB,KAAK;AACD,UAAIA,MAAU;AACV;AAAA;AAAA,IAER,KAAK;AACD,aAAO;AAAA,EACnB;AACI,SAAO;AACX;","x_google_ignoreList":[0]}