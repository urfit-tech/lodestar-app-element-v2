{"version":3,"file":"index.cjs65.js","sources":["../node_modules/jsonwebtoken/verify.js"],"sourcesContent":["const JsonWebTokenError = require('./lib/JsonWebTokenError');\nconst NotBeforeError = require('./lib/NotBeforeError');\nconst TokenExpiredError = require('./lib/TokenExpiredError');\nconst decode = require('./decode');\nconst timespan = require('./lib/timespan');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst jws = require('jws');\nconst {KeyObject, createSecretKey, createPublicKey} = require(\"crypto\");\n\nconst PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst EC_KEY_ALGS = ['ES256', 'ES384', 'ES512'];\nconst RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  let done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  if (options.allowInvalidAsymmetricKeyTypes !== undefined && typeof options.allowInvalidAsymmetricKeyTypes !== 'boolean') {\n    return done(new JsonWebTokenError('allowInvalidAsymmetricKeyTypes must be a boolean'));\n  }\n\n  const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  const parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  let decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  const header = decodedToken.header;\n  let getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    const hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      return done(new JsonWebTokenError('please specify \"none\" in \"algorithms\" to verify unsigned tokens'));\n    }\n\n    if (secretOrPublicKey != null && !(secretOrPublicKey instanceof KeyObject)) {\n      try {\n        secretOrPublicKey = createPublicKey(secretOrPublicKey);\n      } catch (_) {\n        try {\n          secretOrPublicKey = createSecretKey(typeof secretOrPublicKey === 'string' ? Buffer.from(secretOrPublicKey) : secretOrPublicKey);\n        } catch (_) {\n          return done(new JsonWebTokenError('secretOrPublicKey is not valid key material'))\n        }\n      }\n    }\n\n    if (!options.algorithms) {\n      if (secretOrPublicKey.type === 'secret') {\n        options.algorithms = HS_ALGS;\n      } else if (['rsa', 'rsa-pss'].includes(secretOrPublicKey.asymmetricKeyType)) {\n        options.algorithms = RSA_KEY_ALGS\n      } else if (secretOrPublicKey.asymmetricKeyType === 'ec') {\n        options.algorithms = EC_KEY_ALGS\n      } else {\n        options.algorithms = PUB_KEY_ALGS\n      }\n    }\n\n    if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    if (header.alg.startsWith('HS') && secretOrPublicKey.type !== 'secret') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be a symmetric key when using ${header.alg}`)))\n    } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey.type !== 'public') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be an asymmetric key when using ${header.alg}`)))\n    }\n\n    if (!options.allowInvalidAsymmetricKeyTypes) {\n      try {\n        validateAsymmetricKey(header.alg, secretOrPublicKey);\n      } catch (e) {\n        return done(e);\n      }\n    }\n\n    let valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    const payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      const match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      const invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      const maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      const signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n"],"names":["JsonWebTokenError","require$$0","NotBeforeError","require$$1","TokenExpiredError","require$$2","decode","require$$3","timespan","require$$4","validateAsymmetricKey","require$$5","PS_SUPPORTED","require$$6","jws","require$$7","KeyObject","createSecretKey","createPublicKey","require$$8","PUB_KEY_ALGS","EC_KEY_ALGS","RSA_KEY_ALGS","HS_ALGS","verify","jwtString","secretOrPublicKey","options","callback","done","err","data","clockTimestamp","parts","decodedToken","header","getSecret","secretCallback","hasSignature","e","valid","payload","audiences","targetAudience","audience","maxAgeTimestamp","signature"],"mappings":"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","x_google_ignoreList":[0]}