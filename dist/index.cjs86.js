"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const d=require("./index.cjs135.js"),E=require("./index.cjs136.js");var i,S;function h(){if(S)return i;S=1;const u=d.__require(),l=E.__require(),m={ec:["ES256","ES384","ES512"],rsa:["RS256","PS256","RS384","PS384","RS512","PS512"],"rsa-pss":["PS256","PS384","PS512"]},y={ES256:"prime256v1",ES384:"secp384r1",ES512:"secp521r1"};return i=function(e,t){if(!e||!t)return;const r=t.asymmetricKeyType;if(!r)return;const s=m[r];if(!s)throw new Error(`Unknown key type "${r}".`);if(!s.includes(e))throw new Error(`"alg" parameter for "${r}" key type must be one of: ${s.join(", ")}.`);if(u)switch(r){case"ec":const f=t.asymmetricKeyDetails.namedCurve,o=y[e];if(f!==o)throw new Error(`"alg" parameter "${e}" requires curve "${o}".`);break;case"rsa-pss":if(l){const a=parseInt(e.slice(-3),10),{hashAlgorithm:n,mgf1HashAlgorithm:p,saltLength:c}=t.asymmetricKeyDetails;if(n!==`sha${a}`||p!==n)throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of "alg" ${e}.`);if(c!==void 0&&c>a>>3)throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of "alg" ${e}.`)}break}},i}exports.__require=h;
//# sourceMappingURL=index.cjs86.js.map
