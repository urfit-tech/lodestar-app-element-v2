{"version":3,"file":"index.es101.js","sources":["../node_modules/axios/lib/core/Axios.js"],"sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n"],"names":["validators","validator","Axios","instanceConfig","InterceptorManager","configOrUrl","config","err","dummy","stack","mergeConfig","transitional","paramsSerializer","headers","utils","contextHeaders","method","AxiosHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","i","len","chain","dispatchRequest","newConfig","onFulfilled","onRejected","error","fullPath","buildFullPath","buildURL","url","generateHTTPMethod","isForm","data"],"mappings":";;;;;;;;AAWA,MAAMA,IAAaC,EAAU;AAS7B,MAAMC,EAAM;AAAA,EACV,YAAYC,GAAgB;AAC1B,SAAK,WAAWA,GAChB,KAAK,eAAe;AAAA,MAClB,SAAS,IAAIC,EAAoB;AAAA,MACjC,UAAU,IAAIA,EAAkB;AAAA,IACjC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE,MAAM,QAAQC,GAAaC,GAAQ;AACjC,QAAI;AACF,aAAO,MAAM,KAAK,SAASD,GAAaC,CAAM;AAAA,IAC/C,SAAQC,GAAK;AACZ,UAAIA,aAAe,OAAO;AACxB,YAAIC,IAAQ,CAAE;AAEd,cAAM,oBAAoB,MAAM,kBAAkBA,CAAK,IAAKA,IAAQ,IAAI;AAGxE,cAAMC,IAAQD,EAAM,QAAQA,EAAM,MAAM,QAAQ,SAAS,EAAE,IAAI;AAC/D,YAAI;AACF,UAAKD,EAAI,QAGEE,KAAS,CAAC,OAAOF,EAAI,KAAK,EAAE,SAASE,EAAM,QAAQ,aAAa,EAAE,CAAC,MAC5EF,EAAI,SAAS;AAAA,IAAOE,KAHpBF,EAAI,QAAQE;AAAA,QAKf,QAAW;AAAA,QAEpB;AAAA,MACA;AAEM,YAAMF;AAAA,IACZ;AAAA,EACA;AAAA,EAEE,SAASF,GAAaC,GAAQ;AAG5B,IAAI,OAAOD,KAAgB,YACzBC,IAASA,KAAU,CAAE,GACrBA,EAAO,MAAMD,KAEbC,IAASD,KAAe,CAAE,GAG5BC,IAASI,EAAY,KAAK,UAAUJ,CAAM;AAE1C,UAAM,EAAC,cAAAK,GAAc,kBAAAC,GAAkB,SAAAC,EAAO,IAAIP;AAElD,IAAIK,MAAiB,UACnBV,EAAU,cAAcU,GAAc;AAAA,MACpC,mBAAmBX,EAAW,aAAaA,EAAW,OAAO;AAAA,MAC7D,mBAAmBA,EAAW,aAAaA,EAAW,OAAO;AAAA,MAC7D,qBAAqBA,EAAW,aAAaA,EAAW,OAAO;AAAA,IAChE,GAAE,EAAK,GAGNY,KAAoB,SAClBE,EAAM,WAAWF,CAAgB,IACnCN,EAAO,mBAAmB;AAAA,MACxB,WAAWM;AAAA,IACrB,IAEQX,EAAU,cAAcW,GAAkB;AAAA,MACxC,QAAQZ,EAAW;AAAA,MACnB,WAAWA,EAAW;AAAA,IACvB,GAAE,EAAI,IAKPM,EAAO,sBAAsB,WAEtB,KAAK,SAAS,sBAAsB,SAC7CA,EAAO,oBAAoB,KAAK,SAAS,oBAEzCA,EAAO,oBAAoB,KAG7BL,EAAU,cAAcK,GAAQ;AAAA,MAC9B,SAASN,EAAW,SAAS,SAAS;AAAA,MACtC,eAAeA,EAAW,SAAS,eAAe;AAAA,IACnD,GAAE,EAAI,GAGPM,EAAO,UAAUA,EAAO,UAAU,KAAK,SAAS,UAAU,OAAO,YAAa;AAG9E,QAAIS,IAAiBF,KAAWC,EAAM;AAAA,MACpCD,EAAQ;AAAA,MACRA,EAAQP,EAAO,MAAM;AAAA,IACtB;AAED,IAAAO,KAAWC,EAAM;AAAA,MACf,CAAC,UAAU,OAAO,QAAQ,QAAQ,OAAO,SAAS,QAAQ;AAAA,MAC1D,CAACE,MAAW;AACV,eAAOH,EAAQG,CAAM;AAAA,MAC7B;AAAA,IACK,GAEDV,EAAO,UAAUW,EAAa,OAAOF,GAAgBF,CAAO;AAG5D,UAAMK,IAA0B,CAAE;AAClC,QAAIC,IAAiC;AACrC,SAAK,aAAa,QAAQ,QAAQ,SAAoCC,GAAa;AACjF,MAAI,OAAOA,EAAY,WAAY,cAAcA,EAAY,QAAQd,CAAM,MAAM,OAIjFa,IAAiCA,KAAkCC,EAAY,aAE/EF,EAAwB,QAAQE,EAAY,WAAWA,EAAY,QAAQ;AAAA,IACjF,CAAK;AAED,UAAMC,IAA2B,CAAE;AACnC,SAAK,aAAa,SAAS,QAAQ,SAAkCD,GAAa;AAChF,MAAAC,EAAyB,KAAKD,EAAY,WAAWA,EAAY,QAAQ;AAAA,IAC/E,CAAK;AAED,QAAIE,GACAC,IAAI,GACJC;AAEJ,QAAI,CAACL,GAAgC;AACnC,YAAMM,IAAQ,CAACC,EAAgB,KAAK,IAAI,GAAG,MAAS;AAOpD,WANAD,EAAM,QAAQ,MAAMA,GAAOP,CAAuB,GAClDO,EAAM,KAAK,MAAMA,GAAOJ,CAAwB,GAChDG,IAAMC,EAAM,QAEZH,IAAU,QAAQ,QAAQhB,CAAM,GAEzBiB,IAAIC;AACT,QAAAF,IAAUA,EAAQ,KAAKG,EAAMF,GAAG,GAAGE,EAAMF,GAAG,CAAC;AAG/C,aAAOD;AAAA,IACb;AAEI,IAAAE,IAAMN,EAAwB;AAE9B,QAAIS,IAAYrB;AAIhB,SAFAiB,IAAI,GAEGA,IAAIC,KAAK;AACd,YAAMI,IAAcV,EAAwBK,GAAG,GACzCM,IAAaX,EAAwBK,GAAG;AAC9C,UAAI;AACF,QAAAI,IAAYC,EAAYD,CAAS;AAAA,MAClC,SAAQG,GAAO;AACd,QAAAD,EAAW,KAAK,MAAMC,CAAK;AAC3B;AAAA,MACR;AAAA,IACA;AAEI,QAAI;AACF,MAAAR,IAAUI,EAAgB,KAAK,MAAMC,CAAS;AAAA,IAC/C,SAAQG,GAAO;AACd,aAAO,QAAQ,OAAOA,CAAK;AAAA,IACjC;AAKI,SAHAP,IAAI,GACJC,IAAMH,EAAyB,QAExBE,IAAIC;AACT,MAAAF,IAAUA,EAAQ,KAAKD,EAAyBE,GAAG,GAAGF,EAAyBE,GAAG,CAAC;AAGrF,WAAOD;AAAA,EACX;AAAA,EAEE,OAAOhB,GAAQ;AACb,IAAAA,IAASI,EAAY,KAAK,UAAUJ,CAAM;AAC1C,UAAMyB,IAAWC,EAAc1B,EAAO,SAASA,EAAO,KAAKA,EAAO,iBAAiB;AACnF,WAAO2B,EAASF,GAAUzB,EAAO,QAAQA,EAAO,gBAAgB;AAAA,EACpE;AACA;AAGAQ,EAAM,QAAQ,CAAC,UAAU,OAAO,QAAQ,SAAS,GAAG,SAA6BE,GAAQ;AAEvF,EAAAd,EAAM,UAAUc,CAAM,IAAI,SAASkB,GAAK5B,GAAQ;AAC9C,WAAO,KAAK,QAAQI,EAAYJ,KAAU,CAAA,GAAI;AAAA,MAC5C,QAAAU;AAAA,MACA,KAAAkB;AAAA,MACA,OAAO5B,KAAU,IAAI;AAAA,IAC3B,CAAK,CAAC;AAAA,EACH;AACH,CAAC;AAEDQ,EAAM,QAAQ,CAAC,QAAQ,OAAO,OAAO,GAAG,SAA+BE,GAAQ;AAG7E,WAASmB,EAAmBC,GAAQ;AAClC,WAAO,SAAoBF,GAAKG,GAAM/B,GAAQ;AAC5C,aAAO,KAAK,QAAQI,EAAYJ,KAAU,CAAA,GAAI;AAAA,QAC5C,QAAAU;AAAA,QACA,SAASoB,IAAS;AAAA,UAChB,gBAAgB;AAAA,QAC1B,IAAY,CAAE;AAAA,QACN,KAAAF;AAAA,QACA,MAAAG;AAAA,MACR,CAAO,CAAC;AAAA,IACH;AAAA,EACL;AAEE,EAAAnC,EAAM,UAAUc,CAAM,IAAImB,EAAoB,GAE9CjC,EAAM,UAAUc,IAAS,MAAM,IAAImB,EAAmB,EAAI;AAC5D,CAAC;","x_google_ignoreList":[0]}